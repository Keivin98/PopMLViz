{"version":3,"sources":["Components/UploadFile.js","Components/Main.js","App.js","index.js"],"names":["Chart","register","registerables","App","state","selectedFile","uplaodType","imageURL","columns","data","randomColors","scatter","style","height","position","z_index","top","overflow_x","padding_top","left","backgroud_color","width","marginTop","marginLeft","DRAlgorithm","DRActions","label","value","selectOutlierActions","allActions","selectActions","selectedColumns","selectedOption","selectedUploadOption","isLoading","clusterColors","num_clusters","show","multiValue","describingValues","identifierColumn","selectedOutlierMethod","OutlierData","clusterCheck","outlierCheck","downloadableData","handleMultiChange","option","setState","filter","elem","indexOf","handleOutlierChange","setColumns","act","i","length","push","toLowerCase","setData","setOutlierData","onFileChange","event","target","files","correlationMatrixUpload","name","substr","type","lastModifiedDate","toDateString","scatter2d","x","y","x1","y1","cluster_texts","data_new","mode","text","hovertemplate","marker","color","styles","scatterContainer","scatter1d","scatter2dWithColumns","distributionData","x2","y2","colors","scatter1dWithColumns","scatter3dWithColumns","z","z1","z2","size","layout","autosize","scene","aspectratio","camera","center","eye","up","xaxis","zeroline","yaxis","zaxis","title","scatter3d","processData","dataString","outliers","a","dataStringLines","split","headers","list","row","obj","j","d","substring","Object","values","map","c","selector","handleFileUpload","e","file","reader","FileReader","onload","evt","bstr","result","wb","XLSX","wsname","SheetNames","ws","Sheets","sheet_to_csv","header","readAsBinaryString","UploadCMDataset","sleep","milliseconds","Promise","resolve","setTimeout","handleSelectXChange","scatter1dWithClusters","scatter2dWithClusters","scatter3dWithClusters","handleSelectYChange","handleSelectZChange","onUploadValueChange","onValueChange1D","newSelected","onValueChange2D","onValueChange3D","formSubmit","preventDefault","formData","filename","url","axios","post","then","r","runKmeans","detectOutliers","df","method","parseInt","IncrementItem","DecreaseItem","handleSpecificColumns","handleDRAChange","x_clusters","y_clusters","this","rowCol","k","z_clusters","splitScreen","leftPane","className","checked","onChange","paddingTop","paddingBottom","placeholder","options","accept","disabled","backgroundColor","opacity","paddingVertical","isMulti","display","flexDirection","justifyContent","marginBottom","onClick","rightPane","optionsContainer","dimensions","dropDown","download","newData","outlier","cluster","Component","right","marginRight","alignItems","radioButtons","bottom","Main","props","UploadFile","useState","setArticles","useEffect","fetch","methods","response","json","catch","error","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65163914.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { CsvToHtmlTable } from \"react-csv-to-table\";\nimport { Chart, registerables } from \"chart.js\";\nimport * as XLSX from \"xlsx\";\nimport Select from \"react-select\";\nimport Plot from \"react-plotly.js\";\nimport Loader from \"react-loader-spinner\";\nimport randomColor from \"randomcolor\";\nimport { CSVLink, CSVDownload } from \"react-csv\";\n\nChart.register(...registerables);\nclass App extends Component {\n  state = {\n    // Initially, no file is selected\n    selectedFile: null,\n    uplaodType: null,\n    imageURL: \"\",\n    columns: null,\n    data: null,\n    randomColors: [\n      \"#1aa52a\",\n      \"#7ddaed\",\n      \"#0740ba\",\n      \"#a3a6ed\",\n      \"#cc9d3f\",\n      \"#d87368\",\n      \"#99f7a2\",\n      \"#ff7ae6\",\n    ],\n    scatter: (\n      <Plot\n        data={[]}\n        style={{\n          height: \"70%\",\n          position: \"fixed\",\n          z_index: 1,\n          top: 0,\n          overflow_x: \"hidden\",\n          padding_top: \"20px\",\n          left: 0,\n          backgroud_color: \"red\",\n          width: \"55%\",\n          marginTop: \"10%\",\n          marginLeft: \"30%\",\n        }}\n      />\n    ),\n    DRAlgorithm: \"\",\n    DRActions: [\n      {\n        label: \"PCA\",\n        value: \"PCA\",\n      },\n      {\n        label: \"t-SNE 2D\",\n        value: \"tsne1\",\n      },\n      {\n        label: \"t-SNE 3D\",\n        value: \"tsne2\",\n      },\n    ],\n    selectOutlierActions: [\n      {\n        label: \"1std\",\n        value: \"method1\",\n      },\n      {\n        label: \"2std\",\n        value: \"method2\",\n      },\n      {\n        label: \"3std\",\n        value: \"method3\",\n      },\n    ],\n    allActions: [],\n    selectActions: [],\n    selectedColumns: [null, null],\n    selectedOption: null,\n    selectedUploadOption: null,\n    isLoading: false,\n    clusterColors: [],\n    num_clusters: 0,\n    show: true,\n    multiValue: [],\n    describingValues: [],\n    identifierColumn: \"\",\n    selectedOutlierMethod: \"\",\n    OutlierData: null,\n    clusterCheck: false,\n    outlierCheck: false,\n    downloadableData: null,\n  };\n  handleMultiChange = (option) => {\n    this.setState({\n      multiValue: option,\n      selectActions: this.state.selectActions.filter((elem) => {\n        return option.indexOf(elem) < 0;\n      }),\n    });\n  };\n  handleOutlierChange = (option) => {\n    this.setState({ selectedOutlierMethod: option.label });\n  };\n  setColumns = (columns) => {\n    let act = [];\n    for (var i = 0; i < columns.length; i++) {\n      act.push({\n        value: columns[i][\"name\"].toLowerCase(),\n        label: columns[i][\"name\"],\n      });\n    }\n    this.setState({ columns: columns, selectActions: act, allActions: act });\n  };\n\n  setData = (data) => {\n    this.setState({ data: data });\n  };\n  setOutlierData = (data) => {\n    this.setState({ OutlierData: data });\n  };\n  // On file select (from the pop up)\n  onFileChange = (event) => {\n    // Update the state\n    this.setState({ selectedFile: event.target.files[0] });\n    // console.log(event.target.files[0]);\n  };\n\n  // File content to be displayed after\n  // file upload is complete\n  correlationMatrixUpload = () => {\n    if (this.state.selectedFile) {\n      return (\n        <div>\n          <h2>File Details:</h2>\n          <p>\n            File Name:{\" \"}\n            {this.state.selectedFile.name.substr(\n              0,\n              this.state.selectedFile.name.indexOf(\".\")\n            )}\n          </p>\n          <p>File Type: {this.state.selectedFile.type}</p>\n          <p>\n            {\" \"}\n            Last Modified:{\" \"}\n            {this.state.selectedFile.lastModifiedDate.toDateString()}\n          </p>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <br />\n          <h4>Upload the Dataset</h4>\n        </div>\n      );\n    }\n  };\n\n  scatter2dWithClusters(x, y) {\n    var x_clusters = [];\n    var y_clusters = [];\n    var cluster_texts = [];\n    for (\n      var num_clusters = 0;\n      num_clusters < this.state.num_clusters;\n      num_clusters++\n    ) {\n      x_clusters.push([]);\n      y_clusters.push([]);\n      cluster_texts.push([]);\n    }\n\n    var colors = [];\n\n    for (let j = 0; j < this.state.num_clusters; j += 1) {\n      colors.push(this.state.randomColors[j]);\n    }\n\n    if (this.state.data != null && x != null && y != null) {\n      for (var i = 0; i < this.state.data.length; i++) {\n        let rowCol = this.state.clusterColors[i];\n        x_clusters[rowCol].push(this.state.data[i][x]);\n        y_clusters[rowCol].push(this.state.data[i][y]);\n      }\n      var data_new = [];\n      for (var k = 0; k < this.state.num_clusters; k += 1) {\n        data_new.push({\n          name: \"Cluster \" + k,\n          x: x_clusters[k],\n          y: y_clusters[k],\n          mode: \"markers\",\n          marker: { color: colors[k] },\n          text: cluster_texts[k],\n        });\n      }\n    }\n\n    // console.log(\"before scatter\");\n\n    this.setState({\n      scatter: <Plot data={data_new} style={styles.scatterContainer} />,\n    });\n  }\n\n  scatter1dWithClusters(y) {\n    var x_clusters = [];\n    var y_clusters = [];\n    var cluster_texts = [];\n    for (\n      var num_clusters = 0;\n      num_clusters < this.state.num_clusters;\n      num_clusters++\n    ) {\n      x_clusters.push([]);\n      y_clusters.push([]);\n      cluster_texts.push([]);\n    }\n\n    var colors = [];\n\n    for (let j = 0; j < this.state.num_clusters; j += 1) {\n      colors.push(this.state.randomColors[j]);\n    }\n\n    if (this.state.data != null && y != null) {\n      for (var i = 0; i < this.state.data.length; i++) {\n        let rowCol = this.state.clusterColors[i];\n        x_clusters[rowCol].push(i);\n        y_clusters[rowCol].push(this.state.data[i][y]);\n      }\n      var data_new = [];\n      for (var k = 0; k < this.state.num_clusters; k += 1) {\n        data_new.push({\n          name: \"Cluster \" + k,\n          x: x_clusters[k],\n          y: y_clusters[k],\n          mode: \"markers\",\n          marker: { color: colors[k] },\n          text: cluster_texts[k],\n        });\n      }\n    }\n\n    // console.log(\"before scatter\");\n\n    this.setState({\n      scatter: <Plot data={data_new} style={styles.scatterContainer} />,\n    });\n  }\n\n  scatter3dWithClusters(x, y, z) {\n    var x_clusters = [];\n    var y_clusters = [];\n    var z_clusters = [];\n\n    for (\n      var num_clusters = 0;\n      num_clusters < this.state.num_clusters;\n      num_clusters++\n    ) {\n      x_clusters.push([]);\n      y_clusters.push([]);\n      z_clusters.push([]);\n    }\n\n    var colors = [];\n\n    for (let j = 0; j < this.state.num_clusters; j += 1) {\n      colors.push(this.state.randomColors[j]);\n    }\n\n    if (this.state.data != null && x != null && y != null) {\n      // console.log(\"inside 3d clustering\");\n      for (var i = 0; i < this.state.data.length; i++) {\n        let rowCol = this.state.clusterColors[i];\n        x_clusters[rowCol].push(this.state.data[i][x]);\n        y_clusters[rowCol].push(this.state.data[i][y]);\n        z_clusters[rowCol].push(this.state.data[i][z]);\n      }\n      var data_new = [];\n\n      for (var k = 0; k < this.state.num_clusters; k += 1) {\n        data_new.push({\n          name: \"Cluster \" + k,\n          x: x_clusters[k],\n          y: y_clusters[k],\n          z: z_clusters[k],\n          mode: \"markers\",\n          type: \"scatter3d\",\n          marker: { color: colors[k], size: 3 },\n        });\n      }\n    }\n\n    var layout = {\n      autosize: true,\n      height: 680,\n      scene: {\n        aspectratio: {\n          x: 1,\n          y: 1,\n          z: 1,\n        },\n        camera: {\n          center: {\n            x: 0,\n            y: 0,\n            z: 0,\n          },\n          eye: {\n            x: 1.25,\n            y: 1.25,\n            z: 1.25,\n          },\n          up: {\n            x: 0,\n            y: 0,\n            z: 1,\n          },\n        },\n        xaxis: {\n          name: x,\n          type: \"linear\",\n          zeroline: false,\n        },\n        yaxis: {\n          name: y,\n          type: \"linear\",\n          zeroline: false,\n        },\n        zaxis: {\n          name: z,\n          type: \"linear\",\n          zeroline: false,\n        },\n      },\n      title: \"3d point clustering\",\n      width: 800,\n    };\n\n    // console.log(\"before scatter 3d\");\n    this.setState({\n      scatter: (\n        <Plot data={data_new} layout={layout} style={styles.scatterContainer} />\n      ),\n    });\n  }\n\n  scatter2d = (x, y) => {\n    var x1 = [];\n    var y1 = [];\n    var cluster_texts = [];\n    if (this.state.data != null && x != null && y != null) {\n      // console.log(x, y);\n      for (var i = 0; i < this.state.data.length; i++) {\n        x1.push(this.state.data[i][x]);\n        y1.push(this.state.data[i][y]);\n        cluster_texts.push(this.state.data[i][\"MappingID2\"]);\n      }\n      // console.log(cluster_texts);\n      var data_new = [\n        {\n          name: \"Data\",\n          x: x1,\n          y: y1,\n          mode: \"markers\",\n          text: cluster_texts,\n          hovertemplate:\n            \"<i>(%{x:.4f}, %{y:.4f}) </i>\" +\n            \"<br><b>Mapping ID</b>:%{text}</b></br>\",\n          marker: { color: this.state.randomColors[0] },\n        },\n      ];\n    }\n    // console.log(\"before scatter\");\n    this.setState({\n      scatter: <Plot data={data_new} style={styles.scatterContainer} />,\n    });\n  };\n\n  scatter1d = (y) => {\n    var x1 = [];\n    var y1 = [];\n    var cluster_texts = [];\n    if (this.state.data != null && y != null) {\n      for (var i = 0; i < this.state.data.length; i++) {\n        x1.push(i);\n        y1.push(this.state.data[i][y]);\n        cluster_texts.push(this.state.data[i][\"MappingID2\"]);\n      }\n      var data_new = [\n        {\n          name: \"Data\",\n          x: x1,\n          y: y1,\n          mode: \"markers\",\n          text: cluster_texts,\n          hovertemplate:\n            \"<i>(%{x}, %{y:.4f}) </i>\" +\n            \"<br><b>Mapping ID</b>:%{text}</b></br>\",\n          marker: { color: this.state.randomColors[0] },\n          //   type: \"bar\",\n        },\n      ];\n    }\n    // console.log(\"before scatter\");\n    this.setState({\n      scatter: <Plot data={data_new} style={styles.scatterContainer} />,\n    });\n  };\n\n  scatter2dWithColumns = (x, y, distributionData) => {\n    var x1 = [];\n    var x2 = [];\n    var y1 = [];\n    var y2 = [];\n    var cluster_texts = [];\n    let colors = [];\n    if (\n      distributionData != null &&\n      distributionData.filter((elem) => {\n        return elem !== 0 && elem !== 1;\n      }).length === 0\n    ) {\n      // this a boolean data, color everything true or false\n      // choose the two representing colors\n      colors = [this.state.randomColors[0], this.state.randomColors[1]];\n    }\n    if (this.state.data != null && x != null && y != null) {\n      for (var i = 0; i < this.state.data.length; i++) {\n        if (distributionData[i] === 0) {\n          x1.push(this.state.data[i][x]);\n          y1.push(this.state.data[i][y]);\n          cluster_texts.push(this.state.data[i][\"MappingID2\"]);\n        } else {\n          x2.push(this.state.data[i][x]);\n          y2.push(this.state.data[i][y]);\n          cluster_texts.push(this.state.data[i][\"MappingID2\"]);\n        }\n      }\n      var data_new = [\n        {\n          name: \"False\",\n          x: x1,\n          y: y1,\n          mode: \"markers\",\n          marker: { color: colors[0] },\n          text: cluster_texts,\n          hovertemplate:\n            \"<i>(%{x:.4f}, %{y:.4f}) </i>\" +\n            \"<br><b>Mapping ID</b>:%{text}</b></br>\",\n        },\n        {\n          name: \"True\",\n          x: x2,\n          y: y2,\n          mode: \"markers\",\n          marker: { color: colors[1] },\n\n          text: cluster_texts,\n          hovertemplate:\n            \"<i>(%{x:.4f}, %{y:.4f}) </i>\" +\n            \"<br><b>Mapping ID</b>:%{text}</b></br>\",\n        },\n      ];\n    }\n\n    // console.log(\"before scatter\");\n    this.setState({\n      scatter: <Plot data={data_new} style={styles.scatterContainer} />,\n    });\n  };\n\n  scatter1dWithColumns = (y, distributionData) => {\n    var x1 = [];\n    var x2 = [];\n    var y1 = [];\n    var y2 = [];\n    var cluster_texts = [];\n    let colors = [];\n    if (\n      distributionData != null &&\n      distributionData.filter((elem) => {\n        return elem !== 0 && elem !== 1;\n      }).length === 0\n    ) {\n      // this a boolean data, color everything true or false\n      // choose the two representing colors\n      colors = [this.state.randomColors[0], this.state.randomColors[1]];\n    }\n    // console.log(distributionData);\n    if (this.state.data != null && y != null) {\n      for (var i = 0; i < this.state.data.length; i++) {\n        if (distributionData[i] === 0) {\n          x1.push(i);\n          y1.push(this.state.data[i][y]);\n          cluster_texts.push(this.state.data[i][\"MappingID2\"]);\n        } else {\n          x2.push(i);\n          y2.push(this.state.data[i][y]);\n          cluster_texts.push(this.state.data[i][\"MappingID2\"]);\n        }\n      }\n      var data_new = [\n        {\n          name: \"False\",\n          x: x1,\n          y: y1,\n          mode: \"markers\",\n          marker: { color: colors[0] },\n          text: cluster_texts,\n          hovertemplate:\n            \"<i>(%{x}, %{y:.4f}) </i>\" +\n            \"<br><b>Mapping ID</b>:%{text}</b></br>\",\n        },\n        {\n          name: \"True\",\n          x: x2,\n          y: y2,\n          mode: \"markers\",\n          marker: { color: colors[1] },\n\n          text: cluster_texts,\n          hovertemplate:\n            \"<i>(%{x}, %{y:.4f}) </i>\" +\n            \"<br><b>Mapping ID</b>:%{text}</b></br>\",\n        },\n      ];\n    }\n\n    // console.log(\"before scatter\");\n    this.setState({\n      scatter: <Plot data={data_new} style={styles.scatterContainer} />,\n    });\n  };\n  scatter3dWithColumns = (x, y, z, distributionData) => {\n    var x1 = [];\n    var x2 = [];\n    var z1 = [];\n    var z2 = [];\n    var y1 = [];\n    var y2 = [];\n    var cluster_texts = [];\n\n    let colors = [];\n\n    if (\n      distributionData != null &&\n      distributionData.filter((elem) => {\n        return elem !== 0 && elem !== 1;\n      }).length === 0\n    ) {\n      // this a boolean data, color everything true or false\n      // choose the two representing colors\n      colors = [this.state.randomColors[0], this.state.randomColors[1]];\n    }\n    if (this.state.data != null && x != null && y != null && z != null) {\n      for (var i = 0; i < this.state.data.length; i++) {\n        if (distributionData[i] === 0) {\n          x1.push(this.state.data[i][x]);\n          y1.push(this.state.data[i][y]);\n          z1.push(this.state.data[i][z]);\n          cluster_texts.push(this.state.data[i][\"MappingID2\"]);\n        } else {\n          x2.push(this.state.data[i][x]);\n          y2.push(this.state.data[i][y]);\n          z2.push(this.state.data[i][z]);\n          cluster_texts.push(this.state.data[i][\"MappingID2\"]);\n        }\n      }\n      var data_new = [\n        {\n          name: \"False\",\n          x: x1,\n          y: y1,\n          z: z1,\n          mode: \"markers\",\n          type: \"scatter3d\",\n          marker: { color: colors[0], size: 2 },\n          text: cluster_texts,\n          hovertemplate:\n            \"<i>(%{x:.4f}, %{y:.4f}) </i>\" +\n            \"<br><b>Mapping ID</b>:%{text}</b></br>\",\n        },\n        {\n          name: \"True\",\n          x: x2,\n          y: y2,\n          z: z2,\n          mode: \"markers\",\n          type: \"scatter3d\",\n          marker: { color: colors[1], size: 2 },\n          text: cluster_texts,\n          hovertemplate:\n            \"<i>(%{x:.4f}, %{y:.4f}) </i>\" +\n            \"<br><b>Mapping ID</b>:%{text}</b></br>\",\n        },\n      ];\n      var layout = {\n        autosize: true,\n        height: 680,\n        scene: {\n          aspectratio: {\n            x: 1,\n            y: 1,\n            z: 1,\n          },\n          camera: {\n            center: {\n              x: 0,\n              y: 0,\n              z: 0,\n            },\n            eye: {\n              x: 1.25,\n              y: 1.25,\n              z: 1.25,\n            },\n            up: {\n              x: 0,\n              y: 0,\n              z: 1,\n            },\n          },\n          xaxis: {\n            type: \"linear\",\n            zeroline: false,\n          },\n          yaxis: {\n            type: \"linear\",\n            zeroline: false,\n          },\n          zaxis: {\n            type: \"linear\",\n            zeroline: false,\n          },\n        },\n        title: \"3D scatter plot\",\n        width: 800,\n      };\n    }\n\n    // console.log(\"before scatter\");\n    this.setState({\n      scatter: (\n        <Plot data={data_new} layout={layout} style={styles.scatterContainer} />\n      ),\n    });\n  };\n\n  scatter3d = (x, y, z) => {\n    var x1 = [];\n    var z1 = [];\n    var y1 = [];\n    var cluster_texts = [];\n    if (this.state.data != null && x != null && y != null && z != null) {\n      // console.log(x, y);\n      for (var i = 0; i < this.state.data.length; i++) {\n        x1.push(this.state.data[i][x]);\n        y1.push(this.state.data[i][y]);\n        z1.push(this.state.data[i][z]);\n        cluster_texts.push(this.state.data[i][\"MappingID2\"]);\n      }\n      var data_new = [\n        {\n          name: \"Data\",\n          x: x1,\n          y: y1,\n          z: z1,\n          mode: \"markers\",\n          type: \"scatter3d\",\n          text: cluster_texts,\n          hovertemplate:\n            \"<i>(%{x:.4f}, %{y:.4f}) </i>\" +\n            \"<br><b>Mapping ID</b>:%{text}</b></br>\",\n          marker: { color: this.state.randomColors[0], size: 2 },\n        },\n      ];\n      var layout = {\n        autosize: true,\n        height: 680,\n        scene: {\n          aspectratio: {\n            x: 1,\n            y: 1,\n            z: 1,\n          },\n          camera: {\n            center: {\n              x: 0,\n              y: 0,\n              z: 0,\n            },\n            eye: {\n              x: 1.25,\n              y: 1.25,\n              z: 1.25,\n            },\n            up: {\n              x: 0,\n              y: 0,\n              z: 1,\n            },\n          },\n          xaxis: {\n            type: \"linear\",\n            zeroline: false,\n          },\n          yaxis: {\n            type: \"linear\",\n            zeroline: false,\n          },\n          zaxis: {\n            type: \"linear\",\n            zeroline: false,\n          },\n        },\n        title: \"3D scatter plot\",\n        width: 800,\n      };\n    }\n\n    // console.log(\"before scatter\");\n    this.setState({\n      scatter: (\n        <Plot data={data_new} layout={layout} style={styles.scatterContainer} />\n      ),\n    });\n  };\n\n  processData = async (dataString, outliers) => {\n    const dataStringLines = dataString.split(/\\r\\n|\\n/);\n    const headers = dataStringLines[0].split(\n      /,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/\n    );\n\n    const list = [];\n    for (let i = 1; i < dataStringLines.length; i++) {\n      const row = dataStringLines[i].split(\n        /,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/\n      );\n      if (headers && row.length === headers.length) {\n        const obj = {};\n        for (let j = 0; j < headers.length; j++) {\n          let d = row[j];\n          if (d.length > 0) {\n            if (d[0] === '\"') d = d.substring(1, d.length - 1);\n            if (d[d.length - 1] === '\"') d = d.substring(d.length - 2, 1);\n          }\n          if (headers[j]) {\n            obj[headers[j]] = d;\n          }\n        }\n\n        // remove the blank rows\n        if (Object.values(obj).filter((x) => x).length > 0) {\n          list.push(obj);\n        }\n      }\n    }\n\n    // prepare columns list from headers\n    const columns = headers.map((c) => ({\n      name: c,\n      selector: c,\n    }));\n    if (outliers === true) {\n      this.setOutlierData(list);\n      //   console.log(this.state.OutlierData);\n    } else {\n      this.setData(list);\n      this.setColumns(columns);\n    }\n  };\n\n  // handle file upload\n  handleFileUpload = (e) => {\n    // console.log(e);\n    this.setState({ selectedFile: e.target.files[0] });\n    if (\n      this.state.selectedUploadOption === \"PCA\" ||\n      this.state.selectedUploadOption === \"t-SNE\"\n    ) {\n      const file = e.target.files[0];\n      const reader = new FileReader();\n      reader.onload = (evt) => {\n        /* Parse data */\n        const bstr = evt.target.result;\n        const wb = XLSX.read(bstr, { type: \"binary\" });\n        /* Get first worksheet */\n        const wsname = wb.SheetNames[0];\n        const ws = wb.Sheets[wsname];\n        /* Convert array of arrays */\n        const data = XLSX.utils.sheet_to_csv(ws, { header: 1 });\n        this.processData(data, false);\n      };\n      reader.readAsBinaryString(file);\n    } else {\n      this.UploadCMDataset(e.target.files[0]);\n    }\n  };\n  sleep = (milliseconds) => {\n    return new Promise((resolve) => setTimeout(resolve, milliseconds));\n  };\n  handleSelectXChange = (value) => {\n    // console.log(\"x change : \", value);\n    this.setState({\n      selectedColumns: [\n        value.label,\n        this.state.selectedColumns[1],\n        this.state.selectedColumns[2],\n      ],\n    });\n    if (\n      this.state.selectedColumns[2] === null &&\n      this.state.selectedColumns[2] === null\n    ) {\n      if (this.state.clusterColors.length === 0) {\n        this.scatter1d(value.label);\n      } else {\n        this.scatter1dWithClusters(value.label);\n      }\n    } else if (this.state.selectedColumns[2] === null) {\n      if (this.state.clusterColors.length === 0) {\n        this.scatter2d(value.label, this.state.selectedColumns[1]);\n      } else {\n        this.scatter2dWithClusters(value.label, this.state.selectedColumns[1]);\n      }\n    } else {\n      if (this.state.clusterColors.length === 0) {\n        this.scatter3d(\n          value.label,\n          this.state.selectedColumns[1],\n          this.state.selectedColumns[2]\n        );\n      } else {\n        this.scatter3dWithClusters(\n          value.label,\n          this.state.selectedColumns[1],\n          this.state.selectedColumns[2]\n        );\n      }\n    }\n\n    return this.state.scatter;\n  };\n\n  handleSelectYChange = (value) => {\n    // console.log(\"Y change : \", value);\n    this.setState({\n      selectedColumns: [this.state.selectedColumns[0], value.label, null],\n    });\n    if (this.state.selectedColumns[2] === null) {\n      if (this.state.clusterColors.length === 0) {\n        this.scatter2d(this.state.selectedColumns[0], value.label);\n      } else {\n        this.scatter2dWithClusters(this.state.selectedColumns[0], value.label);\n      }\n    } else {\n      if (this.state.clusterColors.length === 0) {\n        this.scatter3d(\n          this.state.selectedColumns[0],\n          value.label,\n          this.state.selectedColumns[2]\n        );\n      } else {\n        this.scatter3dWithClusters(\n          this.state.selectedColumns[0],\n          value.label,\n          this.state.selectedColumns[2]\n        );\n      }\n    }\n\n    return this.state.scatter;\n  };\n  handleSelectZChange = (value) => {\n    // console.log(\"Z change : \", value);\n    this.setState({\n      selectedColumns: [\n        this.state.selectedColumns[0],\n        this.state.selectedColumns[1],\n        value.label,\n      ],\n    });\n    if (this.state.clusterColors.length === 0) {\n      this.scatter3d(\n        this.state.selectedColumns[0],\n        this.state.selectedColumns[1],\n        value.label\n      );\n    } else {\n      this.scatter3dWithClusters(\n        this.state.selectedColumns[0],\n        this.state.selectedColumns[1],\n        value.label\n      );\n    }\n    return this.state.scatter;\n  };\n\n  onUploadValueChange = (event) => {\n    this.setState({\n      selectedUploadOption: event.target.value,\n    });\n  };\n  onValueChange1D = (event) => {\n    var newSelected = [this.state.selectedColumns, null, null];\n    this.setState({\n      selectedOption: event.target.value,\n      selectedColumns: newSelected,\n    });\n  };\n  onValueChange2D = (event) => {\n    var newSelected = this.state.selectedColumns;\n    newSelected[2] = null;\n    this.setState({\n      selectedOption: event.target.value,\n      selectedColumns: newSelected,\n    });\n  };\n\n  onValueChange3D = (event) => {\n    this.setState({\n      selectedOption: event.target.value,\n    });\n  };\n\n  formSubmit = (event) => {\n    event.preventDefault();\n    // console.log(this.state.selectedOption);\n  };\n\n  UploadCMDataset = (file) => {\n    // Create an object of formData\n    const formData = {\n      filename: file.name,\n    };\n    // console.log(file);\n    this.setState({ isLoading: true });\n    var url = \"http://localhost:5000/\";\n    if (this.state.DRAlgorithm === \"PCA\") {\n      url = url + \"uploadCM\";\n    } else if (this.state.DRAlgorithm === \"t-SNE 2D\") {\n      url = url + \"cmtsne2d\";\n      // console.log(url);\n    } else if (this.state.DRAlgorithm === \"t-SNE 3D\") {\n      url = url + \"cmtsne3d\";\n    }\n\n    axios\n      .post(url, formData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((r) => {\n        // console.log(r);\n        this.setState({ isLoading: false, selectedUploadOption: \"PCA\" });\n        this.processData(r.data, false);\n      });\n  };\n\n  runKmeans = () => {\n    const formData = {\n      filename: this.state.selectedFile.name,\n      num_clusters: this.state.num_clusters,\n    };\n    this.setState({ isLoading: true });\n    axios\n      .post(\"http://localhost:5000/runkmeans\", formData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((r) => {\n        // console.log(r);\n        this.setState({\n          isLoading: false,\n          selectedUploadOption: \"PCA\",\n          clusterColors: r.data,\n        });\n        if (\n          this.state.selectedOption === \"2D\" ||\n          this.state.selectedOption === null\n        ) {\n          // console.log(\"2d clustering\");\n          this.scatter2dWithClusters(\n            this.state.selectedColumns[0],\n            this.state.selectedColumns[1],\n            r.data\n          );\n        } else {\n          // console.log(\"3d clustering\");\n          this.scatter3dWithClusters(\n            this.state.selectedColumns[0],\n            this.state.selectedColumns[1],\n            this.state.selectedColumns[2],\n            r.data\n          );\n        }\n      });\n  };\n  //   runPCA = () => {\n  //     this.UploadCMDataset(this.state.selectedFile);\n  //   };\n  detectOutliers = () => {\n    const formData = {\n      df: this.state.data,\n      method: this.state.selectedOutlierMethod,\n    };\n    this.setState({ isLoading: true });\n    axios\n      .post(\"http://localhost:5000/detectoutliers\", formData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((r) => {\n        // console.log(r);\n        this.setState({ isLoading: false });\n        this.processData(r.data, true);\n        this.scatter1dWithColumns(\n          this.state.selectedColumns[0],\n          this.state.OutlierData.map((value) => {\n            return parseInt(value[this.state.selectedColumns[0]], 10);\n          })\n        );\n      });\n  };\n  IncrementItem = () => {\n    this.setState({ num_clusters: this.state.num_clusters + 1 });\n  };\n  DecreaseItem = () => {\n    if (!(this.state.num_clusters <= 0)) {\n      this.setState({ num_clusters: this.state.num_clusters - 1 });\n    }\n  };\n\n  handleSpecificColumns = (event) => {\n    let distributionData = this.state.data.map((elem) => {\n      return parseInt(elem[event.label], 10);\n    });\n    // console.log(distributionData);\n    if (\n      this.state.selectedOption === \"1D\" ||\n      this.state.selectedOption === null\n    ) {\n      // console.log(\"1d with columns\");\n      this.scatter1dWithColumns(\n        this.state.selectedColumns[0],\n        distributionData\n      );\n    } else if (this.state.selectedOption === \"2D\") {\n      // console.log(\"2d with columns\");\n      this.scatter2dWithColumns(\n        this.state.selectedColumns[0],\n        this.state.selectedColumns[1],\n        distributionData\n      );\n    } else {\n      // console.log(\"3d with columns\");\n      this.scatter3dWithColumns(\n        this.state.selectedColumns[0],\n        this.state.selectedColumns[1],\n        this.state.selectedColumns[2],\n        distributionData\n      );\n    }\n  };\n\n  handleDRAChange = (value) => {\n    this.setState({ DRAlgorithm: value.label });\n  };\n\n  render() {\n    return (\n      <div style={styles.splitScreen}>\n        <div style={styles.leftPane}>\n          {this.correlationMatrixUpload()}\n          <form style={{ marginTop: \"30px\" }}>\n            <div className=\"radio\">\n              <label>\n                <input\n                  type=\"radio\"\n                  value=\"Correlation Matrix\"\n                  checked={\n                    this.state.selectedUploadOption === \"Correlation Matrix\"\n                  }\n                  onChange={this.onUploadValueChange}\n                />\n                Correlation Matrix\n              </label>\n            </div>\n            <div className=\"radio\">\n              <label>\n                <input\n                  type=\"radio\"\n                  value=\"PCA\"\n                  checked={this.state.selectedUploadOption === \"PCA\"}\n                  onChange={this.onUploadValueChange}\n                />\n                PCA\n              </label>\n            </div>\n            <div>\n              <label>\n                <input\n                  type=\"radio\"\n                  value=\"t-SNE\"\n                  checked={this.state.selectedUploadOption === \"t-SNE\"}\n                  onChange={this.onUploadValueChange}\n                />\n                t-SNE\n              </label>\n\n              {this.state.selectedUploadOption === \"Correlation Matrix\" && (\n                <div\n                  style={{\n                    width: \"300px\",\n                    paddingTop: \"20px\",\n                    paddingBottom: \"20px\",\n                  }}\n                >\n                  <label>Dimensionality Reduction Algorithms</label>\n                  <Select\n                    name=\"DRA\"\n                    placeholder=\"Algorithm\"\n                    options={this.state.DRActions}\n                    onChange={this.handleDRAChange}\n                  />\n                </div>\n              )}\n            </div>\n            <input\n              type=\"file\"\n              accept=\".csv,.xlsx,.xls\"\n              disabled={this.state.selectedUploadOption === null}\n              onChange={this.handleFileUpload}\n            />\n          </form>\n          <hr\n            style={{\n              color: \"black\",\n              backgroundColor: \"black\",\n              width: \"40%\",\n              height: 5,\n              opacity: 1,\n            }}\n          />\n          <div\n            style={{\n              width: \"300px\",\n              paddingVertical: \"20px\",\n            }}\n          >\n            <label>Describing Columns</label>\n            <Select\n              name=\"filters\"\n              placeholder=\"Filters\"\n              value={this.state.multiValue}\n              options={this.state.selectActions}\n              onChange={this.handleMultiChange}\n              isMulti\n            />\n          </div>\n          <hr\n            style={{\n              color: \"black\",\n              backgroundColor: \"black\",\n              width: \"40%\",\n              height: 5,\n              opacity: 1,\n            }}\n          />\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              width: \"40%\",\n              justifyContent: \"space-between\",\n              marginBottom: \"5%\",\n              height: \"50px\",\n              paddingTop: \"20px\",\n            }}\n          >\n            Num clusters: <button onClick={this.DecreaseItem}>-</button>\n            {this.state.show ? <p>{this.state.num_clusters}</p> : \"\"}\n            <button onClick={this.IncrementItem}> + </button>\n          </div>\n          <button onClick={this.runKmeans}>Run Kmeans</button>\n          <hr\n            style={{\n              color: \"black\",\n              backgroundColor: \"black\",\n              width: \"40%\",\n              height: 5,\n              opacity: 1,\n            }}\n          />\n          <div\n            style={{\n              width: \"300px\",\n              paddingVertical: \"20px\",\n            }}\n          >\n            Choose the outlier detection method\n            <Select\n              options={this.state.selectOutlierActions}\n              onChange={this.handleOutlierChange}\n            />\n            <button onClick={this.detectOutliers} style={{ marginTop: \"20px\" }}>\n              Detect Outliers\n            </button>\n          </div>\n        </div>\n\n        <div\n          className=\"block-example border border-dark\"\n          style={styles.rightPane}\n        >\n          {this.state.isLoading && (\n            <Loader type=\"TailSpin\" color=\"#00BFFF\" height=\"100\" width=\"100\" />\n          )}\n          {!this.state.isLoading && (\n            <div style={styles.rightPane}>\n              {this.state.scatter}\n              <div className=\"container\" style={styles.optionsContainer}>\n                <div className=\"radio\" style={styles.dimensions}>\n                  <label>\n                    <input\n                      type=\"radio\"\n                      value=\"1D\"\n                      checked={this.state.selectedOption === \"1D\"}\n                      onChange={this.onValueChange1D}\n                    />\n                    1D\n                  </label>\n                  <label>\n                    <input\n                      type=\"radio\"\n                      value=\"2D\"\n                      checked={this.state.selectedOption === \"2D\"}\n                      onChange={this.onValueChange2D}\n                    />\n                    2D\n                  </label>\n                  <div className=\"radio\">\n                    <label>\n                      <input\n                        type=\"radio\"\n                        value=\"3D\"\n                        checked={this.state.selectedOption === \"3D\"}\n                        onChange={this.onValueChange3D}\n                      />\n                      3D\n                    </label>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"row-md-8\"></div>\n\n                  <div className=\"row-md-8\" style={styles.dropDown}>\n                    X-axis\n                    <Select\n                      options={this.state.selectActions}\n                      onChange={this.handleSelectXChange}\n                    />\n                  </div>\n                  {(this.state.selectedOption === \"2D\" ||\n                    this.state.selectedOption === \"3D\") && (\n                    <div className=\"row-md-8\" style={styles.dropDown}>\n                      Y-axis\n                      <Select\n                        options={this.state.selectActions}\n                        onChange={this.handleSelectYChange}\n                      />\n                    </div>\n                  )}\n                  {this.state.selectedOption === \"3D\" && (\n                    <div className=\"row-md-8\" style={styles.dropDown}>\n                      Z-axis\n                      <Select\n                        options={this.state.selectActions}\n                        onChange={this.handleSelectZChange}\n                        style={styles.dropDown}\n                      />\n                    </div>\n                  )}\n                  {this.state.multiValue.length > 0 && (\n                    <div className=\"row-md-8\" style={styles.dropDown}>\n                      Choose Describing Column\n                      <Select\n                        options={this.state.multiValue}\n                        onChange={this.handleSpecificColumns}\n                        style={styles.dropDown}\n                      />\n                    </div>\n                  )}\n                </div>\n\n                {this.state.data !== null && (\n                  <div style={styles.download}>\n                    <label>\n                      <input\n                        name=\"outliers\"\n                        type=\"checkbox\"\n                        checked={this.state.outlierCheck}\n                        onChange={() => {\n                          var newData = [];\n                          for (var i = 0; i < this.state.data.length; i++) {\n                            var row = this.state.data[i];\n                            row = {\n                              ...row,\n                              outlier: this.state.OutlierData[i],\n                            };\n                            newData = [...newData, row];\n                          }\n                          this.setState({\n                            outlierCheck: !this.state.outlierCheck,\n                            downloadableData: this.state.OutlierData,\n                          });\n                        }}\n                      />\n                      Remove Outliers\n                    </label>\n                    <label>\n                      <input\n                        name=\"clustering\"\n                        type=\"checkbox\"\n                        checked={this.state.clusterCheck}\n                        onChange={() => {\n                          var newData = [];\n                          for (var i = 0; i < this.state.data.length; i++) {\n                            var row = this.state.data[i];\n                            row = {\n                              ...row,\n                              cluster: this.state.clusterColors[i],\n                            };\n                            newData = [...newData, row];\n                          }\n                          this.setState({\n                            clusterCheck: !this.state.clusterCheck,\n                            downloadableData: newData,\n                          });\n                        }}\n                      />\n                      Include Clustering Information\n                    </label>\n\n                    <button>\n                      <CSVLink\n                        data={\n                          this.state.downloadableData === null\n                            ? this.state.data\n                            : this.state.downloadableData\n                        }\n                      >\n                        Download Data\n                      </CSVLink>\n                    </button>\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  splitScreen: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  leftPane: {\n    height: \"100%\",\n    position: \"fixed\",\n    z_index: 1,\n    top: 0,\n    overflow_x: \"hidden\",\n    padding_top: \"20px\",\n    left: 0,\n    backgroud_color: \"red\",\n    width: \"40%\",\n    marginTop: \"5%\",\n    marginLeft: \"5%\",\n  },\n  rightPane: {\n    height: \"85%\",\n    position: \"fixed\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    top: 0,\n    right: 0,\n    width: \"75%\",\n    marginTop: \"5%\",\n    marginRight: \"10px\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  radioButtons: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    color: \"blue\",\n    marginTop: \"10px\",\n  },\n  dimensions: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    width: \"70%\",\n  },\n  dropDown: {\n    width: \"200px\",\n  },\n  optionsContainer: {\n    height: \"45%\",\n    position: \"fixed\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    top: 0,\n    right: 0,\n    width: \"15%\",\n    marginTop: \"5%\",\n    justifyContent: \"center\",\n  },\n  scatterContainer: {\n    height: \"70%\",\n    position: \"fixed\",\n    z_index: 1,\n    top: 0,\n    overflow_x: \"hidden\",\n    padding_top: \"20px\",\n    left: 0,\n    backgroud_color: \"red\",\n    width: \"55%\",\n    marginTop: \"10%\",\n    marginLeft: \"30%\",\n  },\n  download: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"\",\n    position: \"fixed\",\n    bottom: \"20%\",\n    right: \"20px\",\n  },\n};\nexport default App;\n","import UploadFile from \"./UploadFile\";\nconst Main = (props) => {\n  return (\n    <div className=\"m-2\">\n      <UploadFile></UploadFile>\n    </div>\n  );\n};\n\nexport default Main;\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Main from \"./Components/Main\";\n\nfunction App() {\n  const [articles, setArticles] = useState([]);\n\n  // Modify the current state by setting the new data to\n  // the response from the backend\n  useEffect(() => {\n    fetch(\"http://localhost:5000/articles\", {\n      methods: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((response) => setArticles(response))\n      .catch((error) => console.log(error));\n  }, []);\n\n  return (\n    <div className=\"App container m-4\">\n      <div className=\"row\">\n        <div className=\"text-center\">\n          <h1>Visualization Project</h1>\n        </div>\n      </div>\n\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}