{"version":3,"sources":["Components/ScatterPlot.js","Components/Incrementor.js","Components/DownloadData.js","Components/OutlierBlock.js","Components/PCAir.js","Components/TabOutputOptions.js","Components/UploadFile.js","App.js","index.js"],"names":["ScatterPlot","state","num_clusters","clusterColors","data","this","props","layout","style","styles","scatterContainer","Component","position","z_index","top","overflow_x","left","marginTop","marginLeft","width","height","Incrementor","DecreaseItem","setState","onChange","IncrementItem","display","flexDirection","justifyContent","marginBottom","paddingTop","Button","variant","size","onClick","DownloadData","outlierCheck","clusterCheck","downloadableData","pressed","rangeSelector","event","newValue","columnRange","console","log","className","download","name","type","checked","readOnly","disabled","OutlierData","length","newData","i","row","Object","fromEntries","entries","filter","outlierInp","outlier","cluster","clusterNames","bottom","right","padding","border","borderRadius","OutlierBlock","handleApplyClick","Typography","id","gutterBottom","Slider","value","valueLabelDisplay","min","max","PCAir","loading","handleFileUpload","ev","preventDefault","FormData","append","target","files","fetch","method","body","then","response","pcair","uploads","marginRight","accept","color","paddingBottom","TabOutputOptions","cluster_names","showOutputOptions","uniqueClusters","Array","map","clusterName","index","e","new_cluster_names","parentCallback","randomColors","randomShapes","Chart","register","registerables","App","selectedFile","imageURL","columns","distributionData","DRAlgorithm","DRActions","label","selectOutlierActions","allActions","selectActions","selectedColumns","selectedOption","selectedUploadOption","isLoading","show","multiValue","describingValues","selectedDescribingColumn","selectedOutlierMethod","selectedColorShape","handleMultiChange","option","act","push","toLowerCase","elem","indexOf","handleOutlierChange","setColumns","setData","setOutlierData","parseInt","onFileChange","correlationMatrixUpload","fontSize","substr","scatter1d","y","x1","y1","cluster_texts","data_new","x","mode","text","hovertemplate","marker","title","xaxis","yaxis","scatterCategorical","DIM","z","categoricalData","uniqueTags","catID","colID","symbol","categoryID","plot_title","autosize","scene","aspectratio","camera","center","eye","up","zeroline","zaxis","scatterCategoricalandOutliers","outliersOnly","outlierColor","otherColor","opacity","scatter2d","scatter3d","z1","processData","dataString","outliers","a","dataStringLines","split","headers","list","obj","j","d","substring","values","c","selector","file","reader","FileReader","onload","evt","bstr","result","wb","XLSX","wsname","SheetNames","ws","Sheets","sheet_to_csv","header","UploadCMDataset","readAsBinaryString","handleSelectXChange","handleSelectYChange","handleSelectZChange","onUploadValueChange","onValueChangeDims","newSelected","onValueChangeColorShape","showScatterPlot","formSubmit","formData","df","url","axios","post","r","runKmeans","runPCAir","detectOutliers","combineType","handleSpecificColumns","handleDRAChange","outlierData","scatterWithClusters","IncrementHandler","handleOutlierColumnChange","handleTabOutputCallback","onPressReset","x_clusters","y_clusters","z_clusters","x_clusters_outliers","y_clusters_outliers","z_clusters_outliers","num_cl","colors","rowCol","k","isNaN","splitScreen","leftPane","placeholder","options","backgroundColor","paddingVertical","isMulti","fontWeight","fontStyle","rightPane","dimensions","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","dropDown","isDisabled","optionsContainer","describingColumnDropDown","defaultValue","outputSettings","padding_top","alignItems","radioButtons","Navbar","paddingLeft","bg","Brand","UploadFile","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f8b9a14.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Plot from 'react-plotly.js';\nimport PropTypes from 'prop-types';\n\nclass ScatterPlot extends Component {\n  constructor() {\n    super();\n    this.state = {\n      num_clusters: 0,\n      clusterColors: [],\n    };\n  }\n\n  render() {\n    return (\n      <div >\n        <Plot\n          data={this.props.data}\n          layout={this.props.layout}\n          style={styles.scatterContainer}\n        />\n      </div>\n    );\n  }\n}\nScatterPlot.propTypes = {\n  data: PropTypes.array,\n  layout: PropTypes.object,\n};\nconst styles = {\n  scatterContainer: {\n    position: 'fixed',\n    z_index: 1,\n    top: 0,\n    overflow_x: 'hidden',\n    left: 0,\n    marginTop: '12%',\n    marginLeft: '26%',\n    width: \"52%\",\n    height: \"73%\"\n  },\n};\nexport default ScatterPlot;\n","import React, { Component } from \"react\";\nimport { Button } from \"@material-ui/core\";\n\nclass Incrementor extends Component {\n  state = {\n    num_clusters: 2,\n  };\n  DecreaseItem = () => {\n    if (!(this.state.num_clusters <= 2)) {\n      this.setState({ num_clusters: this.state.num_clusters - 1 }, () => {\n        if (this.props.onChange) {\n          this.props.onChange(this.state);\n        }\n      });\n    }\n  };\n  IncrementItem = () => {\n    this.setState({ num_clusters: this.state.num_clusters + 1 }, () => {\n      if (this.props.onChange) {\n        this.props.onChange(this.state);\n      }\n    });\n  };\n  render() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: \"40%\",\n          justifyContent: \"space-between\",\n          marginBottom: \"5%\",\n          height: \"50px\",\n          paddingTop: \"10px\",\n        }}\n      >\n        <div>\n          <label>\n            <h5> Cluster data </h5>\n          </label>\n        </div>\n        <div style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: \"30px\",\n        }}>\n          Num clusters: <Button variant=\"contained\" size=\"small\" onClick={this.DecreaseItem}>-</Button>\n          <p>{this.state.num_clusters}</p>\n          <Button variant=\"contained\" size=\"large\" onClick={this.IncrementItem}> + </Button>\n        </div>        \n      </div>\n    );\n  }\n}\n\nexport default Incrementor;\n","import React, { Component } from \"react\";\nimport { CSVLink } from \"react-csv\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nclass DownloadData extends Component {\n  state = {\n    outlierCheck: false,\n    clusterCheck: false,\n    clusterColors: this.props.clusterColors,\n    downloadableData: [],\n    data: this.props.data,\n    pressed: -1,\n  };\n\n  rangeSelector = (event, newValue) => {\n    this.setState({ columnRange: newValue });\n    console.log(newValue);\n  };\n\n  render() {\n    return (\n      <div className=\"block-example border-light\" style={styles.download}>\n        <label>\n          <input\n            name=\"outliers\"\n            type=\"checkbox\"\n            checked={this.state.outlierCheck}\n            readOnly={true}\n            disabled={this.props.OutlierData.length === 0}\n            onClick={() =>\n              {this.setState({ outlierCheck: !this.state.outlierCheck })\n              var newData = [];\n                // console.log(this.props.OutlierData);\n                for (var i = 0; i < this.state.data.length; i++) {\n                  var row = this.state.downloadableData.length > 0 ? this.state.downloadableData[i] : this.state.data[i];\n                  // row = this.state.outlierCheck ? row : this.state.data[i];\n                  if (!this.state.clusterCheck) {\n                    row = Object.fromEntries(Object.entries(row).filter(([key]) => key !== 'cluster'));\n\n                  }\n                  var outlierInp = this.props.OutlierData[i];\n                  row = {\n                    ...row,\n                    outlier: outlierInp,\n                  };\n                  newData = [...newData, row];\n                }\n                this.setState({\n                  downloadableData: newData,\n                });\n              }}\n          />\n          {\"\\t\"} Remove Outliers\n        </label>\n        <label>\n          <input\n            name=\"clustering\"\n            type=\"checkbox\"\n            checked={this.state.clusterCheck}\n            onChange={() => {\n              if (this.state.clusterCheck) {\n                this.setState({\n                  clusterCheck: !this.state.clusterCheck,\n                });\n              } else {\n                var newData = [];\n                for (var i = 0; i < this.state.data.length; i++) {\n                  var row = this.state.downloadableData.length > 0 ? this.state.downloadableData[i] : this.state.data[i];\n                  if (!this.state.outlierCheck) {\n                    row = Object.fromEntries(Object.entries(row).filter(([key]) => key !== 'outlier'));\n                  }                  \n                  row = {\n                    ...row,\n                    cluster: this.props.clusterNames[this.props.clusterColors[i]],\n                  };\n                  newData = [...newData, row];\n                }\n                this.setState({\n                  clusterCheck: !this.state.clusterCheck,\n                  downloadableData: newData,\n                });\n              }\n            }}\n            disabled={this.props.clusterColors.length === 0}\n          />\n          {\"\\t\"} Include Clustering Info\n        </label>\n        <Button variant=\"outlined\">\n          <CSVLink\n            data={\n              this.state.downloadableData.length === 0\n                ? this.state.data\n                : this.state.downloadableData\n            }\n            onClick={() => {\n              this.setState({\n                clusterCheck: false,\n                outlierCheck: false,\n                // downloadableData: []\n              });\n            }}\n          >\n            Download Data\n          </CSVLink>\n        </Button>\n      </div>\n    );\n  }\n}\n\nDownloadData.propTypes = {\n  data: PropTypes.array,\n  OutlierData: PropTypes.array,\n  clusterColors: PropTypes.array,\n  columnRange: PropTypes.array,\n  clusterNames: PropTypes.object,\n};\n\nconst styles = {\n  download: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"fixed\",\n    bottom: \"6%\",\n    right: \"4%\",\n    width: \"15%\",\n    padding: '20px',\n    border: `3px solid`,\n    borderRadius: 10\n  },\n};\nexport default DownloadData;\n","import React, { Component } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { Button } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nclass OutlierBlock extends Component {\n  state = {\n    columnRange: this.props.columnRange,\n  };\n\n  rangeSelector = (event, newValue) => {\n    this.setState({columnRange: newValue})\n  };\n  handleApplyClick = () => {\n    this.props.onChange(this.state);\n  }\n  \n  render() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: \"100%\",\n          justifyContent: \"space-between\",\n          marginBottom: \"5%\",\n          height: \"50px\",\n          paddingTop: \"10px\",\n        }}\n      >\n        <Typography id=\"range-slider\" gutterBottom>\n              <h6>Columns: </h6>\n        </Typography>\n        <div  \n            style={{\n                display: \"flex\",\n                flexDirection: \"row\", \n                justifyContent: \"space-around\",\n            }}\n        >\n            <Slider\n              value={this.state.columnRange}\n              onChange={this.rangeSelector}\n              valueLabelDisplay=\"auto\"\n              min={1}\n              max={20}\n            />\n            <Button \n                onClick={this.handleApplyClick} \n                variant=\"outlined\" \n                style={{ marginLeft: \"10px\" }}\n            > \n                Apply\n            </Button>\n        </div>\n        PC{this.state.columnRange[0]} to PC{this.state.columnRange[1]}\n      </div>\n    );\n  }\n}\nOutlierBlock.propTypes = {\n  columnRange: PropTypes.array,\n};\nexport default OutlierBlock;","import React, { Component } from 'react';\nimport Loader from \"react-loader-spinner\";\n\nclass PCAir extends Component {\n    state = {\n        loading: false\n    }\n  handleFileUpload = (ev) => {\n    ev.preventDefault();\n\n    const data = new FormData();\n    data.append('file', ev.target.files[0]);\n    data.append('filename', ev.target.value);\n    this.setState({\n        loading:true,\n    })\n\n    fetch('http://10.4.4.115:5000/uploadPCAIR', {\n      method: 'POST',\n      body: data,\n    }).then((response) => {\n        this.setState({\n            loading:false,\n        })\n    });\n  }\n  render() {\n    return (\n    <div\n        style={styles.pcair}\n    >\n        <label>Upload necessary files for PCAir</label>\n        <div style={styles.uploads}> \n            <label style={{marginRight:'6%'}}>.bed</label>\n            <input\n              type=\"file\"\n              accept=\".bed\"\n              onChange={this.handleFileUpload}\n            />\n        </div>\n        <div style={styles.uploads}> \n            <label style={{marginRight:'6%'}}>.bim</label>\n            <input\n              type=\"file\"\n              accept=\".bim\"\n              onChange={this.handleFileUpload}\n            />\n        </div>\n        <div style={styles.uploads}> \n            <label style={{marginRight:'6%'}}>.fam</label>\n            <input\n              type=\"file\"\n              accept=\".fam\"\n              onChange={this.handleFileUpload}\n            />\n        </div>\n        <div style={styles.uploads}> \n            <label style={{marginRight:'3%'}}>Kinship</label>\n            <input\n              type=\"file\"\n              accept=\".txt\"\n              onChange={this.handleFileUpload}\n            />\n        </div>\n        {this.state.loading && <Loader type=\"TailSpin\" color=\"#00BFFF\" height=\"30\" width=\"30\" style={{marginTop:'2%', marginLeft: '20%'}}/>}\n    </div>\n    );\n  }\n}\n\nconst styles = {\n    pcair: {\n        paddingTop: \"20px\",\n        paddingBottom: \"20px\",\n      },\n    uploads: {\n        display: 'flex', \n        flexDirection: 'row',\n        padding: '2px'\n    }\n\n};\nexport default PCAir;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\n\nclass TabOutputOptions extends Component {\n\n  state = {\n      cluster_names: {\n      }\n  }\n  showOutputOptions = () => {\n    var num_clusters = this.props.uniqueClusters;\n    if (num_clusters < 2){\n        num_clusters = 2;\n    }\n    return (\n      <div>\n        <h6>Change cluster names:</h6>\n        {[...Array(num_clusters)].map((clusterName, index) => {\n          return (\n            <div style={{ marginTop: \"10px\"}}>\n              <label style={{ width: \"30%\"}}>Cluster {index}</label>\n              <input type=\"text\" name={index} style={{marginLeft: \"5%\", width: \"60%\"}} onChange={(e) => {\n                  var new_cluster_names = this.state.cluster_names;\n                  new_cluster_names[index] = e.target.value; \n                  this.setState({cluster_names: new_cluster_names});\n              }}/>\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n  render() {\n    return (\n      <div>     \n          {this.showOutputOptions()}\n          <Button variant=\"outlined\" onClick={(event) => {\n              this.props.parentCallback(this.state.cluster_names);\n              event.preventDefault();\n            }}\n            style = {{\n                marginLeft: '50%',\n                marginTop: '10%'\n            }}\n        > \n            Submit \n          </Button>\n      </div>\n    );\n  }\n}\n\nTabOutputOptions.propTypes = {\n    uniqueClusters: PropTypes.array,\n  };\n\nexport default TabOutputOptions;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { Chart, registerables } from \"chart.js\";\nimport * as XLSX from \"xlsx\";\nimport Select from \"react-select\";\nimport Loader from \"react-loader-spinner\";\nimport ScatterPlot from \"./ScatterPlot\";\nimport Incrementor from \"./Incrementor\";\nimport DownloadData from \"./DownloadData\";\nimport OutlierBlock from \"./OutlierBlock\";\nimport PCAir from \"./PCAir\";\nimport { Button } from \"@material-ui/core\";\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport TabOutputOptions from \"./TabOutputOptions\";\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport 'react-tabs/style/react-tabs.css';\n\nconst randomColors = [\n  \"#3f91ba\",\n  \"#801f65\",\n  \"#86af43\",\n  \"#d73521\",\n  \"#1d4c91\",\n  \"#2c663b\",\n  \"#cc9d3f\",\n  \"#ff7ae6\",\n  \"#d87368\",\n  \"#99f7a2\",\n  \"#a3a6ed\",\n  \"#0740ba\",\n  \"#277f05\"\n];\n\nconst randomShapes = [\n  'circle',\n  'square',\n  'diamond',\n  'x',\n  'star',\n  'triangle-up',\n  'bowtie'\n]\nChart.register(...registerables);\nvar num_clusters = 2;\n\n\nclass App extends Component {\n  state = {\n    // Initially, no file is selected\n    columnRange : [1, 10],\n    selectedFile: null,\n    imageURL: \"\",\n    columns: null,\n    data: null,\n    distributionData: [],\n    pressed: -1,\n    cluster_names: {},\n    DRAlgorithm: \"\",\n    DRActions: [\n      {\n        label: \"PCA\",\n        value: \"PCA\",\n      },\n      {\n        label: \"t-SNE 2D\",\n        value: \"tsne1\",\n      },\n      {\n        label: \"t-SNE 3D\",\n        value: \"tsne2\",\n      },\n    ],\n    selectOutlierActions: [\n      {\n        label: \"None\",\n        value: \"method0\",\n      },\n      {\n        label: \"1std\",\n        value: \"method1\",\n      },\n      {\n        label: \"2std\",\n        value: \"method2\",\n      },\n      {\n        label: \"3std\",\n        value: \"method3\",\n      },\n    ],\n    allActions: [],\n    selectActions: [],\n    selectedColumns: [null, null, null],\n    selectedOption: null,\n    selectedUploadOption: null,\n    isLoading: false,\n    clusterColors: [],\n    show: true,\n    multiValue: [],\n    describingValues: [],\n    selectedDescribingColumn: { value: \"None\", label: \"None\" },\n    selectedOutlierMethod: null,\n    OutlierData: [],\n    showOutputOptions: false,\n    selectedColorShape: 0, \n  };\n  handleMultiChange = (option) => {\n    console.log(option);\n    let act = [];\n    for (var i = 0; i < this.state.columns.length; i++) {\n      act.push({\n        value: this.state.columns[i][\"name\"].toLowerCase(),\n        label: this.state.columns[i][\"name\"],\n      });\n    }\n    this.setState({\n      multiValue: [{ value: \"None\", label: \"None\" }, ...option],\n      selectActions: act.filter((elem) => {\n        return option.indexOf(elem) < 0;\n      }),\n    });\n  };\n  handleOutlierChange = (option) => {\n    console.log(this.state.selectedOutlierMethod)\n    this.setState({selectedOutlierMethod : option.label});\n  };\n  setColumns = (columns) => {\n    let act = [];\n    for (var i = 0; i < columns.length; i++) {\n      act.push({\n        value: columns[i][\"name\"].toLowerCase(),\n        label: columns[i][\"name\"],\n      });\n    }\n    this.setState({ columns: columns, selectActions: act, allActions: act });\n  };\n\n  setData = (data) => {\n    this.setState({ data: data });\n  };\n  setOutlierData = (data) => {\n    this.setState({ OutlierData: data.map((elem) => {\n      return parseInt(elem[0], 10);\n    } )})\n  };\n  // On file select (from the pop up)\n  onFileChange = (event) => {\n    // Update the state\n    this.setState({ selectedFile: event.target.files[0] });\n    // console.log(event.target.files[0]);\n  };\n\n  // File content to be displayed after\n  // file upload is complete\n  correlationMatrixUpload = () => {\n    if (this.state.selectedFile) {\n      return (\n        <div>\n          <h2 style={{fontSize: \"0.8vw\"}}>File Details:</h2>\n          <p>\n            File Name:{\" \"}\n            {this.state.selectedFile.name.substr(\n              0,\n              this.state.selectedFile.name.indexOf(\".\")\n            )}\n          </p>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <br />\n          <h4 style={{fontSize: \"0.8vw\"}}>Upload the Dataset</h4>\n        </div>\n      );\n    }\n  };\n  scatter1d = (y) => {\n    var x1 = [];\n    var y1 = [];\n    var cluster_texts = [];\n    if (this.state.data != null && y != null) {\n      for (var i = 0; i < this.state.data.length; i++) {\n        x1.push(i);\n        y1.push(this.state.data[i][y]);\n        cluster_texts.push(this.state.data[i][\"MappingID2\"]);\n      }\n      var data_new = [\n        {\n          name: \"Data\",\n          x: x1,\n          y: y1,\n          mode: \"markers\",\n          text: cluster_texts,\n          hovertemplate:\n            \"<i>(%{x}, %{y:.4f}) </i>\" +\n            \"<br><b>Mapping ID</b>:%{text}</b></br>\",\n          marker: { color: randomColors[0] },\n        },\n      ];\n    }\n    return (\n      <ScatterPlot\n        data={data_new}\n        layout={{\n          title: \"1D plot of \" + y,\n          xaxis: { title: \"MappingID2\" },\n          yaxis: { title: y },\n        }}\n      />\n    );\n  };\n  scatterCategorical = (DIM, x, y, z, categoricalData) => {\n\n    var cluster_texts = [];\n    var uniqueTags = [];\n    var layout = {};\n    var data_new = [];\n    if (categoricalData != null) {\n      // find unique values\n      for (var catID = 0; catID < categoricalData.length; catID ++){\n          if (uniqueTags.indexOf(categoricalData[catID]) === -1) {\n              uniqueTags.push(categoricalData[catID])\n          };\n        }\n      \n\n      for (var colID = 0; colID < uniqueTags.length; colID ++){\n        data_new.push({})\n        if(DIM === 2){\n          if(this.state.selectedColorShape === '0'){\n            data_new[colID] = {\n              name: uniqueTags[colID],\n              x: [],\n              y: [],\n              z: [],\n              type: \"scatter3d\",\n              mode: \"markers\",\n              marker: { color: randomColors[colID], symbol: randomShapes[0], size: 4},\n              text: \"\",\n              hovertemplate:\n                \"<i>(%{x:.4f}, %{y:.4f}) </i>\"\n            };\n          }else{\n            data_new[colID] = {\n              name: uniqueTags[colID],\n              x: [],\n              y: [],\n              z: [],\n              type: \"scatter3d\",\n              mode: \"markers\",\n              marker: { color: randomColors[0], symbol: randomShapes[colID], size: 4},\n              text: \"\",\n              hovertemplate:\n                \"<i>(%{x:.4f}, %{y:.4f}) </i>\"\n            };\n          }\n          \n        }else{\n          if(this.state.selectedColorShape === '0'){\n            data_new[colID] = {\n              name: uniqueTags[colID],\n              x: [],\n              y: [],\n              mode: \"markers\",\n              marker: { color: randomColors[colID], symbol: randomShapes[0]},\n              text: \"\",\n              hovertemplate:\n                \"<i>(%{x:.4f}, %{y:.4f}) </i>\"\n            };\n        }else{\n          data_new[colID] ={\n              name: uniqueTags[colID],\n              x: [],\n              y: [],\n              mode: \"markers\",\n              marker: { color: randomColors[0], symbol: randomShapes[colID] },\n              text: \"\",\n              hovertemplate:\n                \"<i>(%{x:.4f}, %{y:.4f}) </i>\"\n            };\n        } \n      \n      }\n     }\n    }\n\n    if (this.state.data != null ) {\n      for (var i = 0; i < this.state.data.length; i++) {\n        var categoryID = uniqueTags.indexOf(categoricalData[i]);\n        if(DIM === 0){\n          (data_new[categoryID].x).push(i); \n          (data_new[categoryID].y).push(this.state.data[i][x]);\n        }else if (DIM === 1){\n          (data_new[categoryID].x).push(this.state.data[i][x]); \n          (data_new[categoryID].y).push(this.state.data[i][y]);\n        }else {\n              (data_new[categoryID].x).push(this.state.data[i][x]); \n              (data_new[categoryID].y).push(this.state.data[i][y]);\n              (data_new[categoryID].z).push(this.state.data[i][z]);\n        }\n        cluster_texts.push(this.state.data[i][x]);\n      }\n    }    \n    for (colID = 0; colID < uniqueTags.length; colID ++){\n      data_new.text = cluster_texts;\n    }\n    \n    var plot_title = (DIM === 0 ? \"1D plot of \" + x \n                    : DIM === 1 ? \"2D plot of \" + x + \"and \" + y \n                    :             \"3D plot of \" + x + \", \" + y + \" and \" + z )\n\n    if (DIM === 0){\n      layout = {\n        title: plot_title,\n        xaxis: { title: \"MappingID2\" },\n        yaxis: { title: y },\n      }\n    }else if (DIM === 1){\n      layout = {\n        title: plot_title,\n        xaxis: { title: x },\n        yaxis: { title: y },\n      }\n    }else {\n      layout = {\n        autosize: true,\n        scene: {\n          aspectratio: {\n            x: 1,\n            y: 1,\n            z: 1,\n          },\n          camera: {\n            center: {\n              x: 0,\n              y: 0,\n              z: 0,\n            },\n            eye: {\n              x: 1.25,\n              y: 1.25,\n              z: 1.25,\n            },\n            up: {\n              x: 0,\n              y: 0,\n              z: 1,\n            },\n          },\n          xaxis: {\n            type: \"linear\",\n            zeroline: false,\n            title: x,\n          },\n          yaxis: {\n            type: \"linear\",\n            zeroline: false,\n            title: y,\n          },\n          zaxis: {\n            type: \"linear\",\n            zeroline: false,\n            title: z,\n          },\n        },\n        title: plot_title,\n      };\n    }\n    \n    return (\n      <ScatterPlot\n        data={data_new}\n        layout={layout}\n      />\n    );\n  };\n  \n  scatterWithClusters(DIM, x, y, z,  outliers, distributionData) {\n    var x_clusters = [];\n    var y_clusters = [];\n    var layout = {};\n    if (DIM === 2){\n      var z_clusters = [];\n    }\n    var cluster_texts = [];\n\n    if(outliers){\n      var x_clusters_outliers = [];\n      var y_clusters_outliers = [];\n      if (DIM === 2){\n        var z_clusters_outliers = [];\n      }\n    }\n    for (var num_cl = 0; num_cl < num_clusters; num_cl++) {\n      x_clusters.push([]);\n      y_clusters.push([]);\n      if (DIM === 2){\n        z_clusters.push([]);\n      }\n      if(outliers){\n        x_clusters_outliers.push([]);\n        y_clusters_outliers.push([]);\n        if (DIM === 2){\n          z_clusters_outliers.push([]);\n        }\n      }\n      cluster_texts.push([]);\n    }\n\n    var colors = [];\n\n    for (let j = 0; j < num_clusters; j += 1) {\n      colors.push(randomColors[j]);\n    }\n\n    if (this.state.data != null) {\n      for (var i = 0; i < this.state.data.length; i++) {\n        let rowCol = this.state.clusterColors[i];\n        if (outliers && distributionData[i]){\n          if (DIM === 0){\n            x_clusters_outliers[rowCol].push(i);  \n            y_clusters_outliers[rowCol].push(this.state.data[i][x]);\n          }else if (DIM === 1){\n            x_clusters_outliers[rowCol].push(this.state.data[i][x]);\n            y_clusters_outliers[rowCol].push(this.state.data[i][y]);\n          }else{\n            x_clusters_outliers[rowCol].push(this.state.data[i][x]);\n            y_clusters_outliers[rowCol].push(this.state.data[i][y]);\n            z_clusters_outliers[rowCol].push(this.state.data[i][z]);\n          }\n\n        }\n        else{\n          if (DIM === 0){\n            x_clusters[rowCol].push(i);  \n            y_clusters[rowCol].push(this.state.data[i][x]);\n          }else if (DIM === 1){\n            x_clusters[rowCol].push(this.state.data[i][x]);\n            y_clusters[rowCol].push(this.state.data[i][y]);\n          }else{\n            x_clusters[rowCol].push(this.state.data[i][x]);\n            y_clusters[rowCol].push(this.state.data[i][y]);\n            z_clusters[rowCol].push(this.state.data[i][z]);\n          }\n        }\n      }\n      var data_new = [];\n      for (var k = 0; k < num_clusters; k += 1) {\n        if(outliers){\n          if(DIM === 2){\n            data_new.push({\n              name: \"Outliers \" + this.state.cluster_names[k],\n              x: x_clusters_outliers[k],\n              y: y_clusters_outliers[k],\n              z: z_clusters_outliers[k],\n              mode: \"markers\",\n              type: \"scatter3d\",\n              marker: { color: colors[k],  size: 4, symbol: 'cross', opacity:0.5},\n              text: cluster_texts[k],\n              hovertemplate: \"<i>(%{x:.4f}, %{y:.4f}, %{z:.4f}) </i>\"\n            });\n          } else{\n            data_new.push({\n              name: \"Outliers \" + this.state.cluster_names[k],\n              x: x_clusters_outliers[k],\n              y: y_clusters_outliers[k],\n              mode: \"markers\",\n              marker: { color: colors[k], symbol: 'cross', opacity:0.5},\n              text: cluster_texts[k],\n              hovertemplate: \"<i>(%{x:.4f}, %{y:.4f}, %{z:.4f}) </i>\"\n            });\n          }\n        }\n        var name = isNaN(this.state.cluster_names[k]) ? this.state.cluster_names[k] : \"Cluster \" + this.state.cluster_names[k]\n        if(DIM === 2){\n          data_new.push({\n            name: name,\n            x: x_clusters[k],\n            y: y_clusters[k],\n            z: z_clusters[k],\n            mode: \"markers\",\n            type: \"scatter3d\",\n            marker: { color: colors[k],  size: 2},\n            text: cluster_texts[k],\n            hovertemplate: \"<i>(%{x:.4f}, %{y:.4f}, %{z:.4f}) </i>\"\n          });\n        }else{\n          data_new.push({\n            name: name,\n            x: x_clusters[k],\n            y: y_clusters[k],\n            mode: \"markers\",\n            marker: { color: colors[k] },\n            text: cluster_texts[k],\n            hovertemplate: \"<i>(%{x:.4f}, %{y:.4f}) </i>\"\n          });\n        }\n      }\n    }\n    var plot_title = (DIM === 0 ? \"1D plot of \" + x \n                    : DIM === 1 ? \"2D plot of \" + x + \" and \" + y \n                    :             \"3D plot of \" + x + \", \" + y + \" and \" + z )\n    \n    if (DIM === 2){\n      layout = {\n        autosize: true,\n        scene: {\n          aspectratio: {\n            x: 1,\n            y: 1,\n            z: 1,\n          },\n          camera: {\n            center: {\n              x: 0,\n              y: 0,\n              z: 0,\n            },\n            eye: {\n              x: 1.25,\n              y: 1.25,\n              z: 1.25,\n            },\n            up: {\n              x: 0,\n              y: 0,\n              z: 1,\n            },\n          },\n          xaxis: {\n            type: \"linear\",\n            zeroline: false,\n            title: x,\n          },\n          yaxis: {\n            type: \"linear\",\n            zeroline: false,\n            title: y,\n          },\n          zaxis: {\n            type: \"linear\",\n            zeroline: false,\n            title: z,\n          },\n        },\n        title: plot_title,\n      };\n      }else{\n        layout = {\n          title: plot_title,\n          xaxis: { title: x },\n          yaxis: { title: y },\n        };\n      }\n    return (\n      <ScatterPlot\n        data={data_new}\n        layout={layout}\n      />\n    );\n  }\n  \n  scatterCategoricalandOutliers = (DIM, x, y, z, categoricalData, distributionData, outliersOnly) => {\n\n    var cluster_texts = [];\n    var uniqueTags = [];\n    var layout = {};\n    if (categoricalData != null) {\n      // find unique values\n      for (var catID = 0; catID < categoricalData.length; catID ++){\n          if (uniqueTags.indexOf(categoricalData[catID]) === -1) {\n              uniqueTags.push(categoricalData[catID])\n          };\n        }\n      var data_new = [];\n      for (var colID = 0; colID < uniqueTags.length; colID ++){\n        var outlierColor = outliersOnly ? 'grey' : randomColors[colID];\n        var otherColor = outliersOnly ? randomColors[0] : randomColors[colID];\n        var title = outliersOnly  ? '0' : uniqueTags[colID];\n        if(DIM === 2){\n          // actual data\n          data_new.push({\n            name: title,\n            x: [],\n            y: [],\n            z: [],\n            type: \"scatter3d\",\n            mode: \"markers\",\n            marker: { color: otherColor, size: 2},\n            text: \"\",\n            hovertemplate:\n              \"<i>(%{x:.4f}, %{y:.4f}) </i>\"\n          });\n          // outliers \n          data_new.push({\n            name: \"Outliers \" + title,\n            x: [],\n            y: [],\n            z: [],\n            type: \"scatter3d\",\n            mode: \"markers\",\n            marker: { color: outlierColor, size: 4, symbol: 'cross', opacity: '0.5'},\n            text: \"\",\n            hovertemplate:\n              \"<i>(%{x:.4f}, %{y:.4f}) </i>\"\n          });\n        }else{\n          data_new.push({\n            name: title,\n            x: [],\n            y: [],\n            mode: \"markers\",\n            marker: { color: otherColor },\n            text: \"\",\n            hovertemplate:\n              \"<i>(%{x:.4f}, %{y:.4f}) </i>\"\n          });\n          data_new.push({\n            name: \"Outliers \" + title,\n            x: [],\n            y: [],\n            mode: \"markers\",\n            marker: { color: outlierColor, symbol: 'cross', opacity: '0.5' },\n            text: \"\",\n            hovertemplate:\n              \"<i>(%{x:.4f}, %{y:.4f}) </i>\"\n          });\n        }\n      }\n    }\n\n    if (this.state.data != null ) {\n      for (var i = 0; i < this.state.data.length; i++) {\n        var categoryID = uniqueTags.indexOf(categoricalData[i]);\n        if(DIM === 0){\n          if (distributionData[i]){\n            // console.log()\n            (data_new[2*categoryID + 1].x).push(i); \n            (data_new[2*categoryID + 1].y).push(this.state.data[i][x]);\n          }else{\n            (data_new[2*categoryID].x).push(i); \n            (data_new[2*categoryID].y).push(this.state.data[i][x]);\n          }\n        }else if (DIM === 1){\n          if (distributionData[i]){\n            (data_new[2*categoryID + 1].x).push(this.state.data[i][x]); \n            (data_new[2*categoryID + 1].y).push(this.state.data[i][y]);\n\n          }else{\n            (data_new[2*categoryID].x).push(this.state.data[i][x]); \n            (data_new[2*categoryID].y).push(this.state.data[i][y]);\n          }\n        }else {\n          if (distributionData[i]){\n            (data_new[2*categoryID + 1].x).push(this.state.data[i][x]); \n            (data_new[2*categoryID + 1].y).push(this.state.data[i][y]);\n            (data_new[2*categoryID + 1].z).push(this.state.data[i][z]);\n          }else{\n            (data_new[2*categoryID].x).push(this.state.data[i][x]); \n            (data_new[2*categoryID].y).push(this.state.data[i][y]);\n            (data_new[2*categoryID].z).push(this.state.data[i][z]);\n          }\n        }\n        cluster_texts.push(this.state.data[i][x]);\n      }\n    }    \n    for (colID = 0; colID < uniqueTags.length; colID ++){\n      data_new.text = cluster_texts;\n    }\n    \n    var plot_title = (DIM === 0 ? \"1D plot of \" + x \n                    : DIM === 1 ? \"2D plot of \" + x + \" and \" + y \n                    :             \"3D plot of \" + x + \", \" + y + \" and \" + z )\n\n    if (DIM === 0){\n      layout = {\n        title: plot_title,\n        xaxis: { title: \"MappingID2\" },\n        yaxis: { title: y },\n      }\n    }else if (DIM === 1){\n      layout = {\n        title: plot_title,\n        xaxis: { title: x },\n        yaxis: { title: y },\n      }\n    }else {\n      layout = {\n        autosize: true,\n        scene: {\n          aspectratio: {\n            x: 1,\n            y: 1,\n            z: 1,\n          },\n          camera: {\n            center: {\n              x: 0,\n              y: 0,\n              z: 0,\n            },\n            eye: {\n              x: 1.25,\n              y: 1.25,\n              z: 1.25,\n            },\n            up: {\n              x: 0,\n              y: 0,\n              z: 1,\n            },\n          },\n          xaxis: {\n            type: \"linear\",\n            zeroline: false,\n            title: x,\n          },\n          yaxis: {\n            type: \"linear\",\n            zeroline: false,\n            title: y,\n          },\n          zaxis: {\n            type: \"linear\",\n            zeroline: false,\n            title: z,\n          },\n        },\n        title: plot_title,\n      };\n    }\n    \n    return (\n      <ScatterPlot\n        data={data_new}\n        layout={layout}\n      />\n    );\n  };\n\n  \n  scatter2d = (x, y) => {\n    var x1 = [];\n    var y1 = [];\n    var cluster_texts = [];\n    if (this.state.data != null && x != null && y != null) {\n      // console.log(x, y);\n      for (var i = 0; i < this.state.data.length; i++) {\n        x1.push(this.state.data[i][x]);\n        y1.push(this.state.data[i][y]);\n        cluster_texts.push(this.state.data[i][\"MappingID2\"]);\n      }\n      // console.log(cluster_texts);\n      var data_new = [\n        {\n          name: \"Data\",\n          x: x1,\n          y: y1,\n          mode: \"markers\",\n          text: cluster_texts,\n          hovertemplate:\n            \"<i>(%{x:.4f}, %{y:.4f}) </i>\" +\n            \"<br><b>Mapping ID</b>:%{text}</b></br>\",\n          marker: { color: randomColors[0] },\n        },\n      ];\n    }\n    return (\n      <ScatterPlot\n        data={data_new}\n        layout={{\n          title: \"2D plot of \" + x + \" and \" + y,\n          xaxis: { title: x },\n          yaxis: { title: y },\n        }}\n      />\n    );\n  };\n  \n  scatter3d = (x, y, z) => {\n    var x1 = [];\n    var z1 = [];\n    var y1 = [];\n    var cluster_texts = [];\n    if (this.state.data != null && x != null && y != null && z != null) {\n      // console.log(x, y);\n      for (var i = 0; i < this.state.data.length; i++) {\n        x1.push(this.state.data[i][x]);\n        y1.push(this.state.data[i][y]);\n        z1.push(this.state.data[i][z]);\n        cluster_texts.push(this.state.data[i][\"MappingID2\"]);\n      }\n      var data_new = [\n        {\n          name: \"Data\",\n          x: x1,\n          y: y1,\n          z: z1,\n          mode: \"markers\",\n          type: \"scatter3d\",\n          text: cluster_texts,\n          hovertemplate:\n            \"<i>(%{x:.4f}, %{y:.4f}) </i>\" +\n            \"<br><b>Mapping ID</b>:%{text}</b></br>\",\n          marker: { color: randomColors[0], size: 2 },\n        },\n      ];\n      var layout = {\n        autosize: true,\n        scene: {\n          aspectratio: {\n            x: 1,\n            y: 1,\n            z: 1,\n          },\n          camera: {\n            center: {\n              x: 0,\n              y: 0,\n              z: 0,\n            },\n            eye: {\n              x: 1.25,\n              y: 1.25,\n              z: 1.25,\n            },\n            up: {\n              x: 0,\n              y: 0,\n              z: 1,\n            },\n          },\n          xaxis: {\n            type: \"linear\",\n            zeroline: false,\n            title: x,\n          },\n          yaxis: {\n            type: \"linear\",\n            zeroline: false,\n            title: y,\n          },\n          zaxis: {\n            type: \"linear\",\n            zeroline: false,\n            title: z,\n          },\n        },\n        title:  \"3D plot of \" + x + \", \" + y + \" and \" + z ,\n      };\n    }\n\n    // console.log(\"before scatter\");\n    return <ScatterPlot data={data_new} layout={layout} />;\n  };\n\n  processData = async (dataString, outliers) => {\n    const dataStringLines = dataString.split(/\\r\\n|\\n/);\n    const headers = dataStringLines[0].split(\n      /,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/\n    );\n\n    const list = [];\n    for (let i = 1; i < dataStringLines.length; i++) {\n      const row = dataStringLines[i].split(\n        /,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/\n      );\n      if (headers && row.length === headers.length) {\n        const obj = {};\n        for (let j = 0; j < headers.length; j++) {\n          let d = row[j];\n          if (d.length > 0) {\n            if (d[0] === '\"') d = d.substring(1, d.length - 1);\n            if (d[d.length - 1] === '\"') d = d.substring(d.length - 2, 1);\n          }\n          if (headers[j]) {\n            obj[headers[j]] = d;\n          }\n        }\n\n        // remove the blank rows\n        if (Object.values(obj).filter((x) => x).length > 0) {\n          list.push(obj);\n        }\n      }\n    }\n\n    // prepare columns list from headers\n    const columns = headers.map((c) => ({\n      name: c,\n      selector: c,\n    }));\n    if (outliers === true) {\n      this.setOutlierData(list);\n    } else {\n      this.setData(list);\n      this.setColumns(columns);\n    }\n  };\n\n  // handle file upload\n  handleFileUpload = (e) => {\n    // console.log(e);\n    this.setState({ selectedFile: e.target.files[0] });\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.onload = (evt) => {\n      /* Parse data */\n      const bstr = evt.target.result;\n      const wb = XLSX.read(bstr, { type: \"binary\" });\n      /* Get first worksheet */\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      /* Convert array of arrays */\n      const data = XLSX.utils.sheet_to_csv(ws, { header: 1 });\n      this.processData(data, false).then(() => { if (\n        this.state.selectedUploadOption === \"PCA\" ||\n        this.state.selectedUploadOption === \"t-SNE\"\n      ) {} \n      else {\n        this.UploadCMDataset(e.target.files[0]);\n      }});\n    };\n    reader.readAsBinaryString(file);\n   \n  };\n  handleSelectXChange = (value) => {\n    this.setState({\n      selectedColumns: [\n        value.label,\n        this.state.selectedColumns[1],\n        this.state.selectedColumns[2],\n      ],\n    });\n  };\n\n  handleSelectYChange = (value) => {\n    this.setState({\n      selectedColumns: [\n        this.state.selectedColumns[0],\n        value.label,\n        this.state.selectedColumns[2],\n      ],\n    });\n  };\n  handleSelectZChange = (value) => {\n    // console.log(\"Z change : \", value);\n    this.setState({\n      selectedColumns: [\n        this.state.selectedColumns[0],\n        this.state.selectedColumns[1],\n        value.label,\n      ],\n    });\n  };\n\n  onUploadValueChange = (event) => {\n    this.setState({\n      selectedUploadOption: event.target.value,\n    });\n  };\n\n  onValueChangeDims = (event) => {\n    var value = event.target.value;\n    var newSelected = []\n    if (value === '1D'){\n      newSelected = [this.state.selectedColumns[0], null, null];\n      this.setState({\n        selectedOption: event.target.value,\n        selectedColumns: newSelected,\n      });\n    } else if(value === '2D') {\n      newSelected = this.state.selectedColumns;\n      newSelected[2] = null;\n      this.setState({\n        selectedOption: event.target.value,\n        selectedColumns: newSelected,\n      });\n    }else{\n      this.setState({\n        selectedOption: value,\n      });\n    }\n  }\n\n  onValueChangeColorShape = (event) => {\n    // console.log(event.target.value === '0');\n    this.setState({\n        selectedColorShape: event.target.value,\n      });\n      this.showScatterPlot();\n  }\n\n  formSubmit = (event) => {\n    event.preventDefault();\n    // console.log(this.state.selectedOption);\n  };\n\n  UploadCMDataset = (file) => {\n    // Create an object of formData\n    const formData = {\n      df: this.state.data,\n    };\n    // console.log(file);\n    this.setState({ isLoading: true });\n    var url = \"http://10.4.4.115:5000/\";\n    if (this.state.DRAlgorithm === \"PCA\") {\n      url = url + \"uploadCM\";\n    } else if (this.state.DRAlgorithm === \"t-SNE 2D\") {\n      url = url + \"cmtsne2d\";\n      // console.log(url);\n    } else if (this.state.DRAlgorithm === \"t-SNE 3D\") {\n      url = url + \"cmtsne3d\";\n    }\n\n    axios\n      .post(url, formData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((r) => {\n        // console.log(r);\n        this.setState({ isLoading: false, selectedUploadOption: \"PCA\" });\n        this.processData(r.data, false);\n      });\n  };\n\n  runKmeans = () => {\n    console.log(num_clusters);\n    const formData = {\n      df: this.state.data,\n      num_clusters: num_clusters,\n    };\n    this.setState({ isLoading: true });\n    axios\n      .post(\"http://10.4.4.115:5000/runkmeans\", formData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((r) => {\n        var cluster_names = {}; \n        // eslint-disable-next-line array-callback-return\n        [...Array(num_clusters)].map((x, index) => {\n          cluster_names[index] = index;\n        });\n        // console.log(r);\n        this.setState({\n          isLoading: false,\n          selectedUploadOption: \"PCA\",\n          clusterColors: r.data,\n          cluster_names: cluster_names,\n          showOutputOptions: true,\n          distributionData: [],\n          selectedDescribingColumn : { value: \"None\", label: \"None\" },\n        });\n      })\n  };\n\n  runPCAir = () => {\n    this.setState({ isLoading: true });\n    axios\n      .post(\"http://10.4.4.115:5000/runPCAIR\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((r) => {\n        console.log(r.data);\n        this.setState({\n          isLoading: false,\n        });\n        this.processData(r.data, false);\n      })\n  }\n\n  detectOutliers = () => {\n\n    if (this.state.selectedOutlierMethod === \"None\") {\n      this.setOutlierData([]);\n    } else {\n      const formData = {\n        df: this.state.data,\n        method: this.state.selectedOutlierMethod,\n        columnRange : this.state.columnRange,\n        combineType: this.state.pressed,\n      };\n      this.setState({ isLoading: true });\n      axios\n        .post(\"http://10.4.4.115:5000/detectoutliers\", formData, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        })\n        .then((r) => {\n          this.setState({\n            isLoading: false,\n          });\n          this.processData(r.data, true);\n        });\n    }\n  };\n\n  handleSpecificColumns = (event) => {\n    this.setState({\n      distributionData:\n        event.label === \"None\"\n          ? []\n          : this.state.data.map(elem => elem[event.label]),\n      selectedDescribingColumn : event,\n      showOutputOptions: false, \n      cluster_names:[],\n      clusterColors: []\n    });\n  };\n\n  handleDRAChange = (value) => {\n    this.setState({ DRAlgorithm: value.label });\n  };\n\n  showScatterPlot = () => {\n    const x = this.state.selectedColumns[0];\n    const y = this.state.selectedColumns[1];\n    const z = this.state.selectedColumns[2];\n    const distributionData = this.state.distributionData;\n    const outlierData = this.state.OutlierData;\n    const ONE_DIM = 0; \n    const TWO_DIM = 1; \n    const THREE_DIM = 2; \n    if (\n      this.state.selectedColumns[0] === null &&\n      this.state.selectedColumns[1] === null &&\n      this.state.selectedColumns[2] === null\n    ) {\n      return <ScatterPlot data={[]} />;\n    } else if (\n      this.state.selectedColumns[1] === null &&\n      this.state.selectedColumns[2] === null\n    ) {\n      if (\n        this.state.clusterColors.length > 0 ||\n        distributionData.length > 0 ||\n        outlierData.length > 0\n      ) {\n        if (outlierData.length > 0) {\n          if (this.state.clusterColors.length > 0) {\n            return this.scatterWithClusters(ONE_DIM, x, null, null, true, outlierData);\n          }else if (distributionData.length > 0){\n            return this.scatterCategoricalandOutliers(\n              ONE_DIM,\n              x,\n              null,\n              null,\n              distributionData,\n              outlierData,\n              false\n            );\n          }\n          else{     \n            return this.scatterCategoricalandOutliers(\n              ONE_DIM,\n              x, null, null, outlierData, outlierData , true\n            );\n          }\n        } else if (distributionData.length > 0) {\n          return this.scatterCategorical(ONE_DIM, x, null, null, distributionData, false);\n        } else {\n          return this.scatterWithClusters(ONE_DIM, x,null, null, false);\n        }\n      } else {\n        return this.scatter1d(x);\n      }\n    } else if (this.state.selectedColumns[2] === null) {\n      if (\n        this.state.clusterColors.length > 0 ||\n        distributionData.length > 0 ||\n        outlierData.length > 0\n      ) {\n        if (outlierData.length > 0) {\n          if (this.state.clusterColors.length > 0) {\n            return this.scatterWithClusters(TWO_DIM, x, y, null, true, outlierData);\n          }else if (distributionData.length > 0){\n            return this.scatterCategoricalandOutliers(\n              TWO_DIM,\n              x,\n              y,\n              null,\n              distributionData,\n              outlierData,\n              false\n            );\n          }\n          else{\n            return this.scatterCategoricalandOutliers(\n            TWO_DIM,\n            x,\n            y,\n            null,\n            outlierData, \n            outlierData,\n            true\n            );\n          }\n        } else if (distributionData.length > 0) {\n          return this.scatterCategorical(TWO_DIM, x, y, z, distributionData);\n        } else {\n          return this.scatterWithClusters(TWO_DIM, x, y, null, false, null, null);\n        }\n      } else {\n        return this.scatter2d(x, y);\n      }\n    } else {\n      if (\n        this.state.clusterColors.length > 0 ||\n        distributionData.length > 0 ||\n        outlierData.length > 0\n      ) {\n        if (outlierData.length > 0) {\n          if (this.state.clusterColors.length > 0){\n            return this.scatterWithClusters(THREE_DIM, x, y, z, true, outlierData);\n          }else if (distributionData.length > 0){\n            return this.scatterCategoricalandOutliers(\n              THREE_DIM,\n              x,\n              y,\n              z,\n              distributionData,\n              outlierData,\n              false\n            );\n          }\n          else{\n            return this.scatterCategoricalandOutliers(\n              THREE_DIM,\n              x,\n              y,\n              z,\n              outlierData,\n              outlierData,\n              true\n            );\n          }\n        } else if (distributionData.length > 0) {\n          return this.scatterCategorical(THREE_DIM, x, y, z, distributionData);\n        } else {\n          return this.scatterWithClusters(THREE_DIM, x, y, z, false, null, null);\n        }\n      } else {\n        return this.scatter3d(x, y, z);\n      }\n    }\n  };\n  IncrementHandler = (data) => {\n    // console.log(data);\n    num_clusters = data.num_clusters;\n  };\n  handleOutlierColumnChange = (data) => {\n    // console.log(data);\n    this.setState({columnRange: data.columnRange});\n  }\n\n  handleTabOutputCallback = (cluster_names) => {\n    // console.log(cluster_names);\n    this.setState({cluster_names: cluster_names});\n  }\n\n  \n  \n  onPressReset = () => {\n    this.setState({\n      OutlierData: [],\n      cluster_names: {},\n      clusterColors: [],\n      distributionData: [],\n    })\n  }\n  \n  render() {\n    \n    return (\n      <div style={styles.splitScreen}>\n        <div style={styles.leftPane}>\n          {this.correlationMatrixUpload()}\n          <form style={{ marginTop: \"30px\" }}>\n            <div className=\"radio\">\n              <label>\n                <input\n                  type=\"radio\"\n                  value=\"Correlation Matrix\"\n                  checked={\n                    this.state.selectedUploadOption === \"Correlation Matrix\"\n                  }\n                  onChange={this.onUploadValueChange}\n                />\n                Correlation Matrix\n              </label>\n            </div>\n            <div className=\"radio\">\n              <label>\n                <input\n                  type=\"radio\"\n                  value=\"PCA\"\n                  checked={this.state.selectedUploadOption === \"PCA\"}\n                  onChange={this.onUploadValueChange}\n                />\n                PCA\n              </label>\n            </div>\n            <div className=\"radio\">\n              <label>\n                <input\n                  type=\"radio\"\n                  value=\"PCAir\"\n                  checked={this.state.selectedUploadOption === \"PCAir\"}\n                  onChange={this.onUploadValueChange}\n                />\n                PCAir\n              </label>\n            </div>\n            <div>\n              <label>\n                <input\n                  type=\"radio\"\n                  value=\"t-SNE\"\n                  checked={this.state.selectedUploadOption === \"t-SNE\"}\n                  onChange={this.onUploadValueChange}\n                />\n                t-SNE\n              </label>\n\n              {this.state.selectedUploadOption === \"Correlation Matrix\" && (\n                <div\n                  style={{\n                    width: \"300px\",\n                    paddingTop: \"20px\",\n                    paddingBottom: \"20px\",\n                  }}\n                >\n                  <label>Dimensionality Reduction</label>\n                  <Select\n                    name=\"DRA\"\n                    placeholder=\"Algorithm\"\n                    options={this.state.DRActions}\n                    onChange={this.handleDRAChange}\n                  />\n                </div>\n              )}\n              {this.state.selectedUploadOption === \"PCAir\" && (\n                <div>\n                  <PCAir />\n                  <Button variant=\"outlined\"   onClick={this.runPCAir}>Run PCAir</Button>\n                </div>\n              )}\n            </div>\n            {this.state.selectedUploadOption !== \"PCAir\" && (\n                <input\n              type=\"file\"\n              accept=\".csv,.xlsx,.xls\"\n              disabled={this.state.selectedUploadOption === null}\n              onChange={this.handleFileUpload}\n            /> )}\n          </form>\n          <hr\n            style={{\n              color: \"black\",\n              backgroundColor: \"black\",\n              width: \"40%\",\n              height: 3,\n              opacity: 1,\n            }}\n          />\n          <div\n            style={{\n              width: \"270px\",\n              paddingVertical: \"20px\",\n            }}\n          >\n            <label> <h5 style={{fontSize: \"0.8vw\"}}> Describing Columns </h5></label>\n            <Select\n              name=\"filters\"\n              placeholder=\"Filters\"\n              value={this.state.multiValue.filter((elem) => {\n                return elem.label !== \"None\";\n              })}\n              options={this.state.selectActions}\n              onChange={this.handleMultiChange}\n              isMulti\n            />\n          </div>\n          <hr\n            style={{\n              color: \"black\",\n              backgroundColor: \"black\",\n              width: \"40%\",\n              height: 3,\n              opacity: 1,\n            }}\n          />\n          <Incrementor onChange={this.IncrementHandler} />\n          <Button variant=\"outlined\"   onClick={this.runKmeans}>Run Kmeans</Button>\n          <div style= {{marginTop: \"20%\"}}>\n          <Button variant=\"outlined\" style={{color:\"red\", fontWeight:'bold', fontStyle:'italic'}}\n          onClick={this.onPressReset}>\n            RESET\n          </Button>\n          </div>\n          \n        </div>\n\n        <div\n          className=\"block-example border border-light\"\n          style={styles.rightPane}\n        >\n          {this.state.isLoading && (\n            <Loader type=\"TailSpin\" color=\"#00BFFF\" height=\"100\" width=\"100\" style={{marginRight: '25%'}}/>\n          )}\n          {!this.state.isLoading && (\n            <div>\n              {this.showScatterPlot()}\n            </div>\n            )\n          }<div>\n              <div className=\"radio\" style={styles.dimensions}>\n              <FormControl style = {{marginLeft:'2%', marginTop: '2%'}}>\n                <FormLabel id=\"demo-row-radio-buttons-group-label\">Plot</FormLabel>\n                <RadioGroup\n                  row\n                  aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                  name=\"row-radio-buttons-group\"\n                  value={this.state.selectedOption}\n                  onChange={this.onValueChangeDims}\n                >\n                  <FormControlLabel value=\"1D\" control={<Radio color=\"success\" size=\"small\"/>} label=\"1D\" />\n                  <FormControlLabel value=\"2D\" control={<Radio color=\"success\" size=\"small\"/>} label=\"2D\" />\n                  <FormControlLabel value=\"3D\" control={<Radio color=\"success\" size=\"small\"/>} label=\"3D\" />\n                </RadioGroup>\n              </FormControl>\n              <div style={styles.dropDown}>\n                      <label style= {{width : '25%', marginLeft: \"12%\"}} > \n                      <h6 style={{fontSize: \"0.8vw\"}}> X-axis </h6></label>\n                      <div style= {{width : '75%'}} >\n                      <Select\n                        options={this.state.selectActions}\n                        onChange={this.handleSelectXChange}\n                      />\n                      </div>\n                    </div>\n                    \n                      <div style={styles.dropDown}>\n                        <label style= {{width : '25%', marginLeft: \"12%\"}} >\n                        <h6 style={{fontSize: \"0.8vw\"}}> Y-axis </h6>\n                        </label>\n                      <div style= {{width : '75%'}} >\n                        <Select\n                          options={this.state.selectActions}\n                          onChange={this.handleSelectYChange}\n                          isDisabled={this.state.selectedOption !== \"3D\" &&\n                                        this.state.selectedOption !== \"2D\" }\n                        />\n                      </div>\n                      </div>\n                      <div style={styles.dropDown}>\n                        <label style= {{width : '25%', marginLeft: \"12%\"}} > \n                        <h6 style={{fontSize: \"0.8vw\"}}> Z-axis </h6>\n                        </label>\n                      <div style= {{width : '75%'}} >\n                        <Select\n                          options={this.state.selectActions}\n                          onChange={this.handleSelectZChange}\n                          isDisabled={this.state.selectedOption !== \"3D\"}\n                        />\n                      </div>\n                      </div>\n                  </div>\n              <Tabs style={styles.optionsContainer}>\n                  <TabList>\n                    <Tab >Settings</Tab>\n                    <Tab >Output Options</Tab>\n                  </TabList>\n\n                  <TabPanel>\n                  <div className=\"row\">\n                    <div className=\"row-md-8\"></div>\n\n                    \n                    {this.state.multiValue.length > 0 && (\n                      <div style={styles.describingColumnDropDown}>\n                        <label style= {{marginLeft: \"1%\"}} > \n                          <h6 style={{\n                            fontSize: \"0.8vw\",width: \"100%\",\n                            marginTop: \"3%\",\n                            marginLeft: \"1%\"}}>\n                              Choose Describing Column\n                            </h6>\n                        </label>\n                        <div >\n                          <Select\n                            value={this.state.selectedDescribingColumn}\n                            options={this.state.multiValue}\n                            onChange={this.handleSpecificColumns}\n                          />\n                        </div>\n                        <FormControl style = {{marginLeft:'2%', marginTop: '2%'}}>\n                          <FormLabel id=\"describingColumn-row-radio-buttons-group-label\">Identify by: </FormLabel>\n                            <RadioGroup\n                              row\n                              aria-labelledby=\"describingColumn-row-radio-buttons-group-label\"\n                              name=\"row-radio-buttons-group\"\n                              onChange={this.onValueChangeColorShape}\n                              style = {{marginLeft:'2%', marginTop: '2%'}}\n                            >\n                              <FormControlLabel value={0} control={<Radio color=\"success\" size=\"small\"/>} label=\"Color\" />\n                              <FormControlLabel value={1} control={<Radio color=\"success\" size=\"small\"/>} label=\"Shape\" />\n                            </RadioGroup>\n                        </FormControl>\n                      </div>\n                    )}\n                  </div>\n\n            <div\n              style={{\n                width: \"90%\",\n                marginTop: \"3%\",\n                marginLeft: \"3%\"\n              }}\n            >\n              <h6  style={{fontSize: \"0.8vw\"}} >Choose the outlier detection method</h6>\n              <Select\n                options={this.state.selectOutlierActions}\n                defaultValue={this.state.selectOutlierActions.filter((x) => {return x.label === this.state.selectedOutlierMethod})[0]}\n                onChange={this.handleOutlierChange}\n              />\n              \n              <OutlierBlock columnRange= {this.state.columnRange} onChange={this.handleOutlierColumnChange}/>\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"space-around\",\n                  padding: '20px'\n                }}\n              >\n                <Button variant=\"outlined\"  \n                  onClick={() => this.state.pressed === 0 ? this.setState({ pressed: -1 }) : this.setState({ pressed: 0})}\n                  style={{\n                    marginTop: \"10%\",\n                    backgroundColor:\n                      this.state.pressed === 0 ? \"green\" : \"transparent\",\n                  }}\n                >\n                  AND\n                </Button>\n                <Button variant=\"outlined\"  \n                  onClick={() => this.state.pressed === 1 ? this.setState({ pressed: -1 }) : this.setState({ pressed: 1})}\n                  style={{\n                    marginTop: \"10%\",\n                    backgroundColor:\n                      this.state.pressed === 1 ? \"green\" : \"transparent\",\n                  }}\n                >\n                  OR\n                </Button>\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"space-around\",\n                }}\n              >\n                <Button \n                  variant=\"outlined\" \n                  onClick={this.detectOutliers} \n                  style={{ }} \n                  disabled = {\n                    (\n                      this.state.pressed !== 0 && \n                      this.state.pressed !== 1\n                    ) \n                    || this.state.selectedOutlierMethod == null \n                    }\n                >\n                  Detect Outliers\n              </Button>\n              </div>\n            </div>\n\n                {this.state.data !== null && (\n                  <DownloadData\n                    data={this.state.data}\n                    clusterColors={this.state.clusterColors}\n                    OutlierData={this.state.OutlierData}\n                    columnRange={this.state.columnRange}\n                    clusterNames={this.state.cluster_names}\n                  />\n                )}\n                  </TabPanel>\n                  <TabPanel style={styles.outputSettings}> {this.state.showOutputOptions && \n                    <TabOutputOptions uniqueClusters = {num_clusters} parentCallback = {this.handleTabOutputCallback} />}\n                  </TabPanel>\n                </Tabs>\n            </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  splitScreen: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  leftPane: {\n    height: \"100%\",\n    position: \"fixed\",\n    z_index: 1,\n    top: 0,\n    overflow_x: \"hidden\",\n    padding_top: \"20px\",\n    left: 0,\n    width: \"40%\",\n    marginTop: \"5%\",\n    marginLeft: \"3%\",\n  },\n  rightPane: {\n    height: \"88%\",\n    position: \"fixed\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    top: 0,\n    right: 0,\n    width: \"75%\",\n    marginTop: \"5%\",\n    marginRight: \"10px\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 10,\n    // backgroundColor: 'red'\n  },\n  radioButtons: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginTop: \"10px\",\n  },\n  dimensions: {\n    position: 'fixed',\n    z_index: 1,\n    top: '10%',\n    overflow_x: 'hidden',\n    left: 0,\n    marginLeft: '26%',\n    width: \"52%\",\n    display:'flex',\n    flexDirection:'row',\n    padding: \"10px\",\n    backgroundColor: \"#ebeff7\",\n    borderRadius: 10\n  },\n  outputSettings:{\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-around\",\n  },\n\n  dropDown: {\n    width: \"23%\",\n    marginLeft: '4%'\n  },\n  describingColumnDropDown: {\n    width: \"90%\",\n    marginLeft: '3%'\n  },\n  optionsContainer: {\n    position: \"fixed\",\n    right: \"1%\",\n    top: -10, \n    height: \"85%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"20%\",\n    padding: \"10px\",\n    marginTop: \"6%\",\n    backgroundColor: \"#ebeff7\",\n    borderRadius: 10\n  },\n};\nexport default App;\n","import \"./App.css\";\nimport UploadFile from \"./Components/UploadFile\";\nimport Navbar from 'react-bootstrap/Navbar'\nfunction App() {\n  return (\n    <div>\n      <Navbar style={{paddingLeft: \"30px\"}} bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand>Data Visualization Tool</Navbar.Brand>\n      </Navbar>\n  \n      <UploadFile />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}