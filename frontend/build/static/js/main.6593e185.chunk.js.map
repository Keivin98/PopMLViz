{"version":3,"sources":["Components/ScatterPlot.js","Components/Incrementor.js","Components/DownloadData.js","Components/OutlierBlock.js","Components/TabOutputOptions.js","Components/UploadFile.js","App.js","index.js"],"names":["ScatterPlot","state","num_clusters","clusterColors","data","this","props","layout","style","styles","scatterContainer","Component","position","z_index","top","overflow_x","left","marginTop","marginLeft","width","height","Incrementor","DecreaseItem","setState","onChange","IncrementItem","display","flexDirection","justifyContent","marginBottom","paddingTop","Button","variant","size","onClick","DownloadData","outlierCheck","clusterCheck","downloadableData","pressed","rangeSelector","event","newValue","columnRange","console","log","className","download","name","type","checked","readOnly","disabled","OutlierData","newData","i","length","row","outlierInp","j","toString","outlier","cluster","clusterNames","bottom","right","padding","border","borderRadius","OutlierBlock","handleApplyClick","Typography","id","gutterBottom","Slider","value","valueLabelDisplay","min","max","TabOutputOptions","cluster_names","showOutputOptions","uniqueClusters","Array","map","clusterName","index","e","new_cluster_names","target","parentCallback","preventDefault","randomColors","selectedOutlierMethod","Chart","register","registerables","App","selectedFile","imageURL","columns","distributionData","DRAlgorithm","DRActions","label","selectOutlierActions","allActions","selectActions","selectedColumns","selectedOption","selectedUploadOption","isLoading","show","multiValue","describingValues","handleMultiChange","option","filter","elem","indexOf","handleOutlierChange","setColumns","act","push","toLowerCase","setData","setOutlierData","onFileChange","files","correlationMatrixUpload","substr","lastModifiedDate","toDateString","scatter1d","y","x1","y1","cluster_texts","data_new","x","mode","text","hovertemplate","marker","color","title","xaxis","yaxis","scatterCategorical","DIM","z","categoricalData","uniqueTags","catID","colID","categoryID","plot_title","autosize","scene","aspectratio","camera","center","eye","up","zeroline","zaxis","scatterCategoricalandOutliers","outliersOnly","outlierColor","otherColor","symbol","opacity","scatter2d","scatter3d","z1","processData","dataString","outliers","a","dataStringLines","split","headers","list","obj","d","substring","Object","values","c","selector","handleFileUpload","file","reader","FileReader","onload","evt","bstr","result","wb","XLSX","wsname","SheetNames","ws","Sheets","sheet_to_csv","header","then","UploadCMDataset","readAsBinaryString","handleSelectXChange","handleSelectYChange","handleSelectZChange","onUploadValueChange","onValueChange1D","newSelected","onValueChange2D","onValueChange3D","formSubmit","formData","df","url","axios","post","r","runKmeans","detectOutliers","method","handleSpecificColumns","handleDRAChange","showScatterPlot","combine_outliers","parseInt","scatterWithClusters","val1","val2","val3","IncrementHandler","handleOutlierColumnChange","handleTabOutputCallback","onPressReset","x_clusters","y_clusters","z_clusters","x_clusters_outliers","y_clusters_outliers","z_clusters_outliers","num_cl","colors","rowCol","k","isNaN","splitScreen","leftPane","paddingBottom","placeholder","options","accept","backgroundColor","paddingVertical","isMulti","fontWeight","fontStyle","rightPane","optionsContainer","dimensions","dropDown","outputSettings","padding_top","marginRight","alignItems","radioButtons","Navbar","paddingLeft","bg","Brand","UploadFile","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6593e185.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Plot from 'react-plotly.js';\nimport PropTypes from 'prop-types';\n\nclass ScatterPlot extends Component {\n  constructor() {\n    super();\n    this.state = {\n      num_clusters: 0,\n      clusterColors: [],\n    };\n  }\n\n  render() {\n    return (\n      <div >\n        <Plot\n          data={this.props.data}\n          layout={this.props.layout}\n          style={styles.scatterContainer}\n        />\n      </div>\n    );\n  }\n}\nScatterPlot.propTypes = {\n  data: PropTypes.array,\n  layout: PropTypes.object,\n};\nconst styles = {\n  scatterContainer: {\n    position: 'fixed',\n    z_index: 1,\n    top: 0,\n    overflow_x: 'hidden',\n    left: 0,\n    marginTop: '7%',\n    marginLeft: '26%',\n    width: \"50%\",\n    height: \"75%\"\n  },\n};\nexport default ScatterPlot;\n","import React, { Component } from \"react\";\nimport { Button } from \"@material-ui/core\";\n\nclass Incrementor extends Component {\n  state = {\n    num_clusters: 2,\n  };\n  DecreaseItem = () => {\n    if (!(this.state.num_clusters <= 2)) {\n      this.setState({ num_clusters: this.state.num_clusters - 1 }, () => {\n        if (this.props.onChange) {\n          this.props.onChange(this.state);\n        }\n      });\n    }\n  };\n  IncrementItem = () => {\n    this.setState({ num_clusters: this.state.num_clusters + 1 }, () => {\n      if (this.props.onChange) {\n        this.props.onChange(this.state);\n      }\n    });\n  };\n  render() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: \"40%\",\n          justifyContent: \"space-between\",\n          marginBottom: \"5%\",\n          height: \"50px\",\n          paddingTop: \"10px\",\n        }}\n      >\n        <div>\n          <label>\n            <h5> Clustering the data </h5>\n          </label>\n        </div>\n        <div style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: \"30px\",\n        }}>\n          Num clusters: <Button variant=\"contained\" size=\"small\" onClick={this.DecreaseItem}>-</Button>\n          <p>{this.state.num_clusters}</p>\n          <Button variant=\"contained\" size=\"large\" onClick={this.IncrementItem}> + </Button>\n        </div>        \n      </div>\n    );\n  }\n}\n\nexport default Incrementor;\n","import React, { Component } from \"react\";\nimport { CSVLink } from \"react-csv\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nclass DownloadData extends Component {\n  state = {\n    outlierCheck: false,\n    clusterCheck: false,\n    clusterColors: this.props.clusterColors,\n    downloadableData: [],\n    data: this.props.data,\n    pressed: -1,\n  };\n\n  rangeSelector = (event, newValue) => {\n    this.setState({ columnRange: newValue });\n    console.log(newValue);\n  };\n\n  render() {\n    return (\n      <div className=\"block-example border-light\" style={styles.download}>\n        <label>\n          <input\n            name=\"outliers\"\n            type=\"checkbox\"\n            checked={this.state.outlierCheck}\n            readOnly={true}\n            disabled={this.state.OutlierData === null}\n            onClick={() =>\n              {this.setState({ outlierCheck: !this.state.outlierCheck })\n              var newData = [];\n                // console.log(this.props.OutlierData);\n                for (var i = 0; i < this.state.data.length; i++) {\n                  var row = this.state.data[i];\n                  var outlierInp = !this.state.pressed;\n                  for (\n                    var j = this.props.columnRange[0];\n                    j <= this.props.columnRange[1];\n                    j++\n                  ) {\n                    if (this.state.pressed === 0) {\n                      outlierInp =\n                        outlierInp &&\n                        this.props.OutlierData[i][\"PC\" + j.toString()];\n                    } else {\n                      outlierInp =\n                        outlierInp ||\n                        this.props.OutlierData[i][\"PC\" + j.toString()];\n                    }\n                  }\n                  row = {\n                    ...row,\n                    outlier: outlierInp,\n                  };\n                  newData = [...newData, row];\n                }\n                this.setState({\n                  downloadableData: newData,\n                });\n              }}\n          />\n          {\"\\t\"} Remove Outliers\n        </label>\n        <label>\n          <input\n            name=\"clustering\"\n            type=\"checkbox\"\n            checked={this.state.clusterCheck}\n            onChange={() => {\n              if (this.state.clusterCheck) {\n                this.setState({\n                  clusterCheck: !this.state.clusterCheck,\n                });\n              } else {\n                var newData = [];\n                for (var i = 0; i < this.state.data.length; i++) {\n                  var row = this.state.data[i];\n                  row = {\n                    ...row,\n                    cluster: this.props.clusterNames[this.state.clusterColors[i]],\n                  };\n                  newData = [...newData, row];\n                }\n                this.setState({\n                  clusterCheck: !this.state.clusterCheck,\n                  downloadableData: newData,\n                });\n              }\n            }}\n            disabled={this.state.clusterColors.length === 0}\n          />\n          {\"\\t\"} Include Clustering Info\n        </label>\n        <Button variant=\"outlined\">\n          <CSVLink\n            data={\n              this.state.downloadableData === null\n                ? this.state.data\n                : this.state.downloadableData\n            }\n            onClick={() => {\n              this.setState({\n                clusterCheck: false,\n                outlierCheck: false,\n              });\n            }}\n          >\n            Download Data\n          </CSVLink>\n        </Button>\n      </div>\n    );\n  }\n}\n\nDownloadData.propTypes = {\n  data: PropTypes.array,\n  OutlierData: PropTypes.array,\n  clusterColors: PropTypes.array,\n  columnRange: PropTypes.array,\n  clusterNames: PropTypes.object,\n};\n\nconst styles = {\n  download: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"fixed\",\n    bottom: \"15%\",\n    right: \"7%\",\n    width: \"10%\",\n    padding: '20px',\n    border: `3px solid`,\n    borderRadius: 10\n  },\n};\nexport default DownloadData;\n","import React, { Component } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { Button } from \"@material-ui/core\";\n\nclass OutlierBlock extends Component {\n  state = {\n    columnRange: [1,10],\n  };\n\n  rangeSelector = (event, newValue) => {\n    this.setState({columnRange: newValue})\n  };\n  handleApplyClick = () => {\n    this.props.onChange(this.state);\n  }\n  \n  render() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: \"100%\",\n          justifyContent: \"space-between\",\n          marginBottom: \"5%\",\n          height: \"50px\",\n          paddingTop: \"10px\",\n        }}\n      >\n        <Typography id=\"range-slider\" gutterBottom>\n              <h6>Columns: </h6>\n        </Typography>\n        <div  \n            style={{\n                display: \"flex\",\n                flexDirection: \"row\", \n                justifyContent: \"space-around\",\n            }}\n        >\n            <Slider\n              value={this.state.columnRange}\n              onChange={this.rangeSelector}\n              valueLabelDisplay=\"auto\"\n              min={1}\n              max={20}\n            />\n            <Button \n                onClick={this.handleApplyClick} \n                variant=\"outlined\" \n                style={{ marginLeft: \"10px\" }}\n            > \n                Apply\n            </Button>\n        </div>\n        PC{this.state.columnRange[0]} to PC{this.state.columnRange[1]}\n      </div>\n    );\n  }\n}\n\nexport default OutlierBlock;","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\n\nclass TabOutputOptions extends Component {\n\n  state = {\n      cluster_names: {\n      }\n  }\n  showOutputOptions = () => {\n    var num_clusters = this.props.uniqueClusters;\n    if (num_clusters < 2){\n        num_clusters = 2;\n    }\n    return (\n      <div>\n        <h6>Change cluster names:</h6>\n        {[...Array(num_clusters)].map((clusterName, index) => {\n          return (\n            <div style={{ marginTop: \"10px\"}}>\n              <label style={{ width: \"30%\"}}>Cluster {index}</label>\n              <input type=\"text\" name={index} style={{marginLeft: \"5%\", width: \"60%\"}} onChange={(e) => {\n                  var new_cluster_names = this.state.cluster_names;\n                  new_cluster_names[index] = e.target.value; \n                  this.setState({cluster_names: new_cluster_names});\n              }}/>\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n  render() {\n    return (\n      <div>     \n          {this.showOutputOptions()}\n          <Button variant=\"outlined\" onClick={(event) => {\n              this.props.parentCallback(this.state.cluster_names);\n              event.preventDefault();\n            }}\n            style = {{\n                marginLeft: '50%',\n                marginTop: '10%'\n            }}\n        > \n            Submit \n          </Button>\n      </div>\n    );\n  }\n}\n\nTabOutputOptions.propTypes = {\n    uniqueClusters: PropTypes.array,\n  };\n\nexport default TabOutputOptions;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { Chart, registerables } from \"chart.js\";\nimport * as XLSX from \"xlsx\";\nimport Select from \"react-select\";\nimport Loader from \"react-loader-spinner\";\nimport ScatterPlot from \"./ScatterPlot\";\nimport Incrementor from \"./Incrementor\";\nimport DownloadData from \"./DownloadData\";\nimport OutlierBlock from \"./OutlierBlock\";\nimport { Button } from \"@material-ui/core\";\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport TabOutputOptions from \"./TabOutputOptions\"\nimport 'react-tabs/style/react-tabs.css';\n\nconst randomColors = [\n  \"#3f91ba\",\n  \"#801f65\",\n  \"#86af43\",\n  \"#d73521\",\n  \"#1d4c91\",\n  \"#2c663b\",\n  \"#cc9d3f\",\n  \"#ff7ae6\",\n  \"#d87368\",\n  \"#99f7a2\",\n  \"#a3a6ed\",\n  \"#0740ba\",\n  \"#277f05\"\n];\nvar selectedOutlierMethod = null;\nChart.register(...registerables);\nvar num_clusters = 2;\n\n\nclass App extends Component {\n  state = {\n    // Initially, no file is selected\n    columnRange : [1, 10],\n    selectedFile: null,\n    imageURL: \"\",\n    columns: null,\n    data: null,\n    distributionData: [],\n    pressed: -1,\n    cluster_names: {},\n    DRAlgorithm: \"\",\n    DRActions: [\n      {\n        label: \"PCA\",\n        value: \"PCA\",\n      },\n      {\n        label: \"t-SNE 2D\",\n        value: \"tsne1\",\n      },\n      {\n        label: \"t-SNE 3D\",\n        value: \"tsne2\",\n      },\n    ],\n    selectOutlierActions: [\n      {\n        label: \"None\",\n        value: \"method0\",\n      },\n      {\n        label: \"1std\",\n        value: \"method1\",\n      },\n      {\n        label: \"2std\",\n        value: \"method2\",\n      },\n      {\n        label: \"3std\",\n        value: \"method3\",\n      },\n    ],\n    allActions: [],\n    selectActions: [],\n    selectedColumns: [null, null, null],\n    selectedOption: null,\n    selectedUploadOption: null,\n    isLoading: false,\n    clusterColors: [],\n    show: true,\n    multiValue: [],\n    describingValues: [],\n    selectedOutlierMethod: null,\n    OutlierData: [],\n  };\n  handleMultiChange = (option) => {\n    console.log(option);\n    this.setState({\n      multiValue: [{ value: \"None\", label: \"None\" }, ...option],\n      selectActions: this.state.selectActions.filter((elem) => {\n        return option.indexOf(elem) < 0;\n      }),\n    });\n  };\n  handleOutlierChange = (option) => {\n    selectedOutlierMethod = option.label;\n  };\n  setColumns = (columns) => {\n    let act = [];\n    for (var i = 0; i < columns.length; i++) {\n      act.push({\n        value: columns[i][\"name\"].toLowerCase(),\n        label: columns[i][\"name\"],\n      });\n    }\n    this.setState({ columns: columns, selectActions: act, allActions: act });\n  };\n\n  setData = (data) => {\n    this.setState({ data: data });\n  };\n  setOutlierData = (data) => {\n    this.setState({ OutlierData: data });\n  };\n  // On file select (from the pop up)\n  onFileChange = (event) => {\n    // Update the state\n    this.setState({ selectedFile: event.target.files[0] });\n    // console.log(event.target.files[0]);\n  };\n\n  // File content to be displayed after\n  // file upload is complete\n  correlationMatrixUpload = () => {\n    if (this.state.selectedFile) {\n      return (\n        <div>\n          <h2>File Details:</h2>\n          <p>\n            File Name:{\" \"}\n            {this.state.selectedFile.name.substr(\n              0,\n              this.state.selectedFile.name.indexOf(\".\")\n            )}\n          </p>\n          <p>File Type: {this.state.selectedFile.type}</p>\n          <p>\n            {\" \"}\n            Last Modified:{\" \"}\n            {this.state.selectedFile.lastModifiedDate.toDateString()}\n          </p>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <br />\n          <h4>Upload the Dataset</h4>\n        </div>\n      );\n    }\n  };\n  scatter1d = (y) => {\n    var x1 = [];\n    var y1 = [];\n    var cluster_texts = [];\n    if (this.state.data != null && y != null) {\n      for (var i = 0; i < this.state.data.length; i++) {\n        x1.push(i);\n        y1.push(this.state.data[i][y]);\n        cluster_texts.push(this.state.data[i][\"MappingID2\"]);\n      }\n      var data_new = [\n        {\n          name: \"Data\",\n          x: x1,\n          y: y1,\n          mode: \"markers\",\n          text: cluster_texts,\n          hovertemplate:\n            \"<i>(%{x}, %{y:.4f}) </i>\" +\n            \"<br><b>Mapping ID</b>:%{text}</b></br>\",\n          marker: { color: randomColors[0] },\n        },\n      ];\n    }\n    return (\n      <ScatterPlot\n        data={data_new}\n        layout={{\n          title: \"1D plot of \" + y,\n          xaxis: { title: \"MappingID2\" },\n          yaxis: { title: y },\n        }}\n      />\n    );\n  };\n  scatterCategorical = (DIM, x, y, z, categoricalData) => {\n\n    var cluster_texts = [];\n    var uniqueTags = [];\n    var layout = {};\n\n    if (categoricalData != null) {\n      // find unique values\n      for (var catID = 0; catID < categoricalData.length; catID ++){\n          if (uniqueTags.indexOf(categoricalData[catID]) === -1) {\n              uniqueTags.push(categoricalData[catID])\n          };\n        }\n      var data_new = [];\n\n      for (var colID = 0; colID < uniqueTags.length; colID ++){\n        if(DIM === 2){\n          data_new.push({\n            name: uniqueTags[colID],\n            x: [],\n            y: [],\n            z: [],\n            type: \"scatter3d\",\n            mode: \"markers\",\n            marker: { color: randomColors[colID], size: 2},\n            text: \"\",\n            hovertemplate:\n              \"<i>(%{x}, %{y:.4f}) </i>\"\n          });\n        }else{\n          data_new.push({\n            name: uniqueTags[colID],\n            x: [],\n            y: [],\n            mode: \"markers\",\n            marker: { color: randomColors[colID] },\n            text: \"\",\n            hovertemplate:\n              \"<i>(%{x}, %{y:.4f}) </i>\"\n          });\n        }\n        }\n      }\n\n    if (this.state.data != null ) {\n      for (var i = 0; i < this.state.data.length; i++) {\n        var categoryID = uniqueTags.indexOf(categoricalData[i]);\n        if(DIM === 0){\n          (data_new[categoryID].x).push(i); \n          (data_new[categoryID].y).push(this.state.data[i][x]);\n        }else if (DIM === 1){\n          (data_new[categoryID].x).push(this.state.data[i][x]); \n          (data_new[categoryID].y).push(this.state.data[i][y]);\n        }else {\n              (data_new[categoryID].x).push(this.state.data[i][x]); \n              (data_new[categoryID].y).push(this.state.data[i][y]);\n              (data_new[categoryID].z).push(this.state.data[i][z]);\n        }\n        cluster_texts.push(this.state.data[i][x]);\n      }\n    }    \n    for (colID = 0; colID < uniqueTags.length; colID ++){\n      data_new.text = cluster_texts;\n    }\n    \n    var plot_title = (DIM === 0 ? \"1D plot of \" + x \n                    : DIM === 1 ? \"2D plot of \" + x + \" and \" + y \n                    :             \"3D plot of \" + x + \" and \" + y + \" and \" + z )\n\n    if (DIM === 0){\n      layout = {\n        title: plot_title,\n        xaxis: { title: \"MappingID2\" },\n        yaxis: { title: y },\n      }\n    }else if (DIM === 1){\n      layout = {\n        title: plot_title,\n        xaxis: { title: x },\n        yaxis: { title: y },\n      }\n    }else {\n      layout = {\n        autosize: true,\n        scene: {\n          aspectratio: {\n            x: 1,\n            y: 1,\n            z: 1,\n          },\n          camera: {\n            center: {\n              x: 0,\n              y: 0,\n              z: 0,\n            },\n            eye: {\n              x: 1.25,\n              y: 1.25,\n              z: 1.25,\n            },\n            up: {\n              x: 0,\n              y: 0,\n              z: 1,\n            },\n          },\n          xaxis: {\n            type: \"linear\",\n            zeroline: false,\n            title: x,\n          },\n          yaxis: {\n            type: \"linear\",\n            zeroline: false,\n            title: y,\n          },\n          zaxis: {\n            type: \"linear\",\n            zeroline: false,\n            title: z,\n          },\n        },\n        title: plot_title,\n      };\n    }\n    \n    return (\n      <ScatterPlot\n        data={data_new}\n        layout={layout}\n      />\n    );\n  };\n  \n  scatterWithClusters(DIM, x, y, z,  outliers, distributionData) {\n    var x_clusters = [];\n    var y_clusters = [];\n    var layout = {};\n    if (DIM === 2){\n      var z_clusters = [];\n    }\n    var cluster_texts = [];\n\n    if(outliers){\n      var x_clusters_outliers = [];\n      var y_clusters_outliers = [];\n      if (DIM === 2){\n        var z_clusters_outliers = [];\n      }\n    }\n    for (var num_cl = 0; num_cl < num_clusters; num_cl++) {\n      x_clusters.push([]);\n      y_clusters.push([]);\n      if (DIM === 2){\n        z_clusters.push([]);\n      }\n      if(outliers){\n        x_clusters_outliers.push([]);\n        y_clusters_outliers.push([]);\n        if (DIM === 2){\n          z_clusters_outliers.push([]);\n        }\n      }\n      cluster_texts.push([]);\n    }\n\n    var colors = [];\n\n    for (let j = 0; j < num_clusters; j += 1) {\n      colors.push(randomColors[j]);\n    }\n\n    if (this.state.data != null) {\n      for (var i = 0; i < this.state.data.length; i++) {\n        let rowCol = this.state.clusterColors[i];\n        if (outliers && distributionData[i]){\n          if (DIM === 0){\n            x_clusters_outliers[rowCol].push(i);  \n            y_clusters_outliers[rowCol].push(this.state.data[i][x]);\n          }else if (DIM === 1){\n            x_clusters_outliers[rowCol].push(this.state.data[i][x]);\n            y_clusters_outliers[rowCol].push(this.state.data[i][y]);\n          }else{\n            x_clusters_outliers[rowCol].push(this.state.data[i][x]);\n            y_clusters_outliers[rowCol].push(this.state.data[i][y]);\n            z_clusters_outliers[rowCol].push(this.state.data[i][z]);\n          }\n\n        }\n        else{\n          if (DIM === 0){\n            x_clusters[rowCol].push(i);  \n            y_clusters[rowCol].push(this.state.data[i][x]);\n          }else if (DIM === 1){\n            x_clusters[rowCol].push(this.state.data[i][x]);\n            y_clusters[rowCol].push(this.state.data[i][y]);\n          }else{\n            x_clusters[rowCol].push(this.state.data[i][x]);\n            y_clusters[rowCol].push(this.state.data[i][y]);\n            z_clusters[rowCol].push(this.state.data[i][z]);\n          }\n        }\n      }\n      var data_new = [];\n      for (var k = 0; k < num_clusters; k += 1) {\n        if(outliers){\n          if(DIM === 2){\n            data_new.push({\n              name: \"Outliers \" + this.state.cluster_names[k],\n              x: x_clusters_outliers[k],\n              y: y_clusters_outliers[k],\n              z: z_clusters_outliers[k],\n              mode: \"markers\",\n              type: \"scatter3d\",\n              marker: { color: colors[k],  size: 4, symbol: 'cross', opacity:0.5},\n              text: cluster_texts[k],\n            });\n          } else{\n            data_new.push({\n              name: \"Outliers \" + this.state.cluster_names[k],\n              x: x_clusters_outliers[k],\n              y: y_clusters_outliers[k],\n              mode: \"markers\",\n              marker: { color: colors[k], symbol: 'cross', opacity:0.5},\n              text: cluster_texts[k],\n            });\n          }\n        }\n        var name = isNaN(this.state.cluster_names[k]) ? this.state.cluster_names[k] : \"Cluster \" + this.state.cluster_names[k]\n        if(DIM === 2){\n          data_new.push({\n            name: name,\n            x: x_clusters[k],\n            y: y_clusters[k],\n            z: z_clusters[k],\n            mode: \"markers\",\n            type: \"scatter3d\",\n            marker: { color: colors[k],  size: 2},\n            text: cluster_texts[k],\n          });\n        }else{\n          data_new.push({\n            name: name,\n            x: x_clusters[k],\n            y: y_clusters[k],\n            mode: \"markers\",\n            marker: { color: colors[k] },\n            text: cluster_texts[k],\n          });\n        }\n      }\n    }\n    var plot_title = (DIM === 0 ? \"1D plot of \" + x \n                    : DIM === 1 ? \"2D plot of \" + x + \" and \" + y \n                    :             \"3D plot of \" + x + \" and \" + y + \" and \" + z )\n    \n    if (DIM === 2){\n      layout = {\n        autosize: true,\n        scene: {\n          aspectratio: {\n            x: 1,\n            y: 1,\n            z: 1,\n          },\n          camera: {\n            center: {\n              x: 0,\n              y: 0,\n              z: 0,\n            },\n            eye: {\n              x: 1.25,\n              y: 1.25,\n              z: 1.25,\n            },\n            up: {\n              x: 0,\n              y: 0,\n              z: 1,\n            },\n          },\n          xaxis: {\n            type: \"linear\",\n            zeroline: false,\n            title: x,\n          },\n          yaxis: {\n            type: \"linear\",\n            zeroline: false,\n            title: y,\n          },\n          zaxis: {\n            type: \"linear\",\n            zeroline: false,\n            title: z,\n          },\n        },\n        title: plot_title,\n      };\n      }else{\n        layout = {\n          title: plot_title,\n          xaxis: { title: x },\n          yaxis: { title: y },\n        };\n      }\n    return (\n      <ScatterPlot\n        data={data_new}\n        layout={layout}\n      />\n    );\n  }\n  \n  scatterCategoricalandOutliers = (DIM, x, y, z, categoricalData, distributionData, outliersOnly) => {\n\n    var cluster_texts = [];\n    var uniqueTags = [];\n    var layout = {};\n    if (categoricalData != null) {\n      // find unique values\n      for (var catID = 0; catID < categoricalData.length; catID ++){\n          if (uniqueTags.indexOf(categoricalData[catID]) === -1) {\n              uniqueTags.push(categoricalData[catID])\n          };\n        }\n      var data_new = [];\n\n      for (var colID = 0; colID < uniqueTags.length; colID ++){\n        var outlierColor = outliersOnly ? 'grey' : randomColors[colID];\n        var otherColor = outliersOnly ? randomColors[0] : randomColors[colID];\n        var title = outliersOnly ? '0' : uniqueTags[colID];\n        if(DIM === 2){\n          // actual data\n          data_new.push({\n            name: title,\n            x: [],\n            y: [],\n            z: [],\n            type: \"scatter3d\",\n            mode: \"markers\",\n            marker: { color: otherColor, size: 2},\n            text: \"\",\n            hovertemplate:\n              \"<i>(%{x}, %{y:.4f}) </i>\"\n          });\n          // outliers \n          data_new.push({\n            name: \"Outliers \" + title,\n            x: [],\n            y: [],\n            z: [],\n            type: \"scatter3d\",\n            mode: \"markers\",\n            marker: { color: outlierColor, size: 4, symbol: 'cross', opacity: '0.5'},\n            text: \"\",\n            hovertemplate:\n              \"<i>(%{x}, %{y:.4f}) </i>\"\n          });\n        }else{\n          data_new.push({\n            name: title,\n            x: [],\n            y: [],\n            mode: \"markers\",\n            marker: { color: otherColor },\n            text: \"\",\n            hovertemplate:\n              \"<i>(%{x}, %{y:.4f}) </i>\"\n          });\n          data_new.push({\n            name: \"Outlier \" + title,\n            x: [],\n            y: [],\n            mode: \"markers\",\n            marker: { color: outlierColor, symbol: 'cross', opacity: '0.5' },\n            text: \"\",\n            hovertemplate:\n              \"<i>(%{x}, %{y:.4f}) </i>\"\n          });\n        }\n      }\n    }\n\n    if (this.state.data != null ) {\n      for (var i = 0; i < this.state.data.length; i++) {\n        var categoryID = uniqueTags.indexOf(categoricalData[i]);\n        if(DIM === 0){\n          if (distributionData[i]){\n            // console.log()\n            (data_new[2*categoryID + 1].x).push(i); \n            (data_new[2*categoryID + 1].y).push(this.state.data[i][x]);\n          }else{\n            (data_new[2*categoryID].x).push(i); \n            (data_new[2*categoryID].y).push(this.state.data[i][x]);\n          }\n        }else if (DIM === 1){\n          if (distributionData[i]){\n            (data_new[2*categoryID + 1].x).push(this.state.data[i][x]); \n            (data_new[2*categoryID + 1].y).push(this.state.data[i][y]);\n\n          }else{\n            (data_new[2*categoryID].x).push(this.state.data[i][x]); \n            (data_new[2*categoryID].y).push(this.state.data[i][y]);\n          }\n        }else {\n          if (distributionData[i]){\n            (data_new[2*categoryID + 1].x).push(this.state.data[i][x]); \n            (data_new[2*categoryID + 1].y).push(this.state.data[i][y]);\n            (data_new[2*categoryID + 1].z).push(this.state.data[i][z]);\n          }else{\n            (data_new[2*categoryID].x).push(this.state.data[i][x]); \n            (data_new[2*categoryID].y).push(this.state.data[i][y]);\n            (data_new[2*categoryID].z).push(this.state.data[i][z]);\n          }\n        }\n        cluster_texts.push(this.state.data[i][x]);\n      }\n    }    \n    for (colID = 0; colID < uniqueTags.length; colID ++){\n      data_new.text = cluster_texts;\n    }\n    \n    var plot_title = (DIM === 0 ? \"1D plot of \" + x \n                    : DIM === 1 ? \"2D plot of \" + x + \" and \" + y \n                    :             \"3D plot of \" + x + \" and \" + y + \" and \" + z )\n\n    if (DIM === 0){\n      layout = {\n        title: plot_title,\n        xaxis: { title: \"MappingID2\" },\n        yaxis: { title: y },\n      }\n    }else if (DIM === 1){\n      layout = {\n        title: plot_title,\n        xaxis: { title: x },\n        yaxis: { title: y },\n      }\n    }else {\n      layout = {\n        autosize: true,\n        scene: {\n          aspectratio: {\n            x: 1,\n            y: 1,\n            z: 1,\n          },\n          camera: {\n            center: {\n              x: 0,\n              y: 0,\n              z: 0,\n            },\n            eye: {\n              x: 1.25,\n              y: 1.25,\n              z: 1.25,\n            },\n            up: {\n              x: 0,\n              y: 0,\n              z: 1,\n            },\n          },\n          xaxis: {\n            type: \"linear\",\n            zeroline: false,\n            title: x,\n          },\n          yaxis: {\n            type: \"linear\",\n            zeroline: false,\n            title: y,\n          },\n          zaxis: {\n            type: \"linear\",\n            zeroline: false,\n            title: z,\n          },\n        },\n        title: plot_title,\n      };\n    }\n    \n    return (\n      <ScatterPlot\n        data={data_new}\n        layout={layout}\n      />\n    );\n  };\n\n  \n  scatter2d = (x, y) => {\n    var x1 = [];\n    var y1 = [];\n    var cluster_texts = [];\n    if (this.state.data != null && x != null && y != null) {\n      // console.log(x, y);\n      for (var i = 0; i < this.state.data.length; i++) {\n        x1.push(this.state.data[i][x]);\n        y1.push(this.state.data[i][y]);\n        cluster_texts.push(this.state.data[i][\"MappingID2\"]);\n      }\n      // console.log(cluster_texts);\n      var data_new = [\n        {\n          name: \"Data\",\n          x: x1,\n          y: y1,\n          mode: \"markers\",\n          text: cluster_texts,\n          hovertemplate:\n            \"<i>(%{x:.4f}, %{y:.4f}) </i>\" +\n            \"<br><b>Mapping ID</b>:%{text}</b></br>\",\n          marker: { color: randomColors[0] },\n        },\n      ];\n    }\n    return (\n      <ScatterPlot\n        data={data_new}\n        layout={{\n          title: \"2D plot of \" + x + \" and \" + y,\n          xaxis: { title: x },\n          yaxis: { title: y },\n        }}\n      />\n    );\n  };\n  \n  scatter3d = (x, y, z) => {\n    var x1 = [];\n    var z1 = [];\n    var y1 = [];\n    var cluster_texts = [];\n    if (this.state.data != null && x != null && y != null && z != null) {\n      // console.log(x, y);\n      for (var i = 0; i < this.state.data.length; i++) {\n        x1.push(this.state.data[i][x]);\n        y1.push(this.state.data[i][y]);\n        z1.push(this.state.data[i][z]);\n        cluster_texts.push(this.state.data[i][\"MappingID2\"]);\n      }\n      var data_new = [\n        {\n          name: \"Data\",\n          x: x1,\n          y: y1,\n          z: z1,\n          mode: \"markers\",\n          type: \"scatter3d\",\n          text: cluster_texts,\n          hovertemplate:\n            \"<i>(%{x:.4f}, %{y:.4f}) </i>\" +\n            \"<br><b>Mapping ID</b>:%{text}</b></br>\",\n          marker: { color: randomColors[0], size: 2 },\n        },\n      ];\n      var layout = {\n        autosize: true,\n        scene: {\n          aspectratio: {\n            x: 1,\n            y: 1,\n            z: 1,\n          },\n          camera: {\n            center: {\n              x: 0,\n              y: 0,\n              z: 0,\n            },\n            eye: {\n              x: 1.25,\n              y: 1.25,\n              z: 1.25,\n            },\n            up: {\n              x: 0,\n              y: 0,\n              z: 1,\n            },\n          },\n          xaxis: {\n            type: \"linear\",\n            zeroline: false,\n            title: x,\n          },\n          yaxis: {\n            type: \"linear\",\n            zeroline: false,\n            title: y,\n          },\n          zaxis: {\n            type: \"linear\",\n            zeroline: false,\n            title: z,\n          },\n        },\n        title: \"3D scatter plot\",\n      };\n    }\n\n    // console.log(\"before scatter\");\n    return <ScatterPlot data={data_new} layout={layout} />;\n  };\n\n  processData = async (dataString, outliers) => {\n    const dataStringLines = dataString.split(/\\r\\n|\\n/);\n    const headers = dataStringLines[0].split(\n      /,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/\n    );\n\n    const list = [];\n    for (let i = 1; i < dataStringLines.length; i++) {\n      const row = dataStringLines[i].split(\n        /,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/\n      );\n      if (headers && row.length === headers.length) {\n        const obj = {};\n        for (let j = 0; j < headers.length; j++) {\n          let d = row[j];\n          if (d.length > 0) {\n            if (d[0] === '\"') d = d.substring(1, d.length - 1);\n            if (d[d.length - 1] === '\"') d = d.substring(d.length - 2, 1);\n          }\n          if (headers[j]) {\n            obj[headers[j]] = d;\n          }\n        }\n\n        // remove the blank rows\n        if (Object.values(obj).filter((x) => x).length > 0) {\n          list.push(obj);\n        }\n      }\n    }\n\n    // prepare columns list from headers\n    const columns = headers.map((c) => ({\n      name: c,\n      selector: c,\n    }));\n    if (outliers === true) {\n      this.setOutlierData(list);\n    } else {\n      this.setData(list);\n      this.setColumns(columns);\n    }\n  };\n\n  // handle file upload\n  handleFileUpload = (e) => {\n    // console.log(e);\n    this.setState({ selectedFile: e.target.files[0] });\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.onload = (evt) => {\n      /* Parse data */\n      const bstr = evt.target.result;\n      const wb = XLSX.read(bstr, { type: \"binary\" });\n      /* Get first worksheet */\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      /* Convert array of arrays */\n      const data = XLSX.utils.sheet_to_csv(ws, { header: 1 });\n      this.processData(data, false).then(() => { if (\n        this.state.selectedUploadOption === \"PCA\" ||\n        this.state.selectedUploadOption === \"t-SNE\"\n      ) {} \n      else {\n        this.UploadCMDataset(e.target.files[0]);\n      }});\n    };\n    reader.readAsBinaryString(file);\n   \n  };\n  handleSelectXChange = (value) => {\n    this.setState({\n      selectedColumns: [\n        value.label,\n        this.state.selectedColumns[1],\n        this.state.selectedColumns[2],\n      ],\n    });\n  };\n\n  handleSelectYChange = (value) => {\n    this.setState({\n      selectedColumns: [\n        this.state.selectedColumns[0],\n        value.label,\n        this.state.selectedColumns[2],\n      ],\n    });\n  };\n  handleSelectZChange = (value) => {\n    // console.log(\"Z change : \", value);\n    this.setState({\n      selectedColumns: [\n        this.state.selectedColumns[0],\n        this.state.selectedColumns[1],\n        value.label,\n      ],\n    });\n  };\n\n  onUploadValueChange = (event) => {\n    this.setState({\n      selectedUploadOption: event.target.value,\n    });\n  };\n  onValueChange1D = (event) => {\n    var newSelected = [this.state.selectedColumns, null, null];\n    this.setState({\n      selectedOption: event.target.value,\n      selectedColumns: newSelected,\n    });\n  };\n  onValueChange2D = (event) => {\n    var newSelected = this.state.selectedColumns;\n    newSelected[2] = null;\n    this.setState({\n      selectedOption: event.target.value,\n      selectedColumns: newSelected,\n    });\n  };\n\n  onValueChange3D = (event) => {\n    this.setState({\n      selectedOption: event.target.value,\n    });\n  };\n\n  formSubmit = (event) => {\n    event.preventDefault();\n    // console.log(this.state.selectedOption);\n  };\n\n  UploadCMDataset = (file) => {\n    // Create an object of formData\n    const formData = {\n      df: this.state.data,\n    };\n    // console.log(file);\n    this.setState({ isLoading: true });\n    var url = \"http://10.4.4.115:5000/\";\n    if (this.state.DRAlgorithm === \"PCA\") {\n      url = url + \"uploadCM\";\n    } else if (this.state.DRAlgorithm === \"t-SNE 2D\") {\n      url = url + \"cmtsne2d\";\n      // console.log(url);\n    } else if (this.state.DRAlgorithm === \"t-SNE 3D\") {\n      url = url + \"cmtsne3d\";\n    }\n\n    axios\n      .post(url, formData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((r) => {\n        // console.log(r);\n        this.setState({ isLoading: false, selectedUploadOption: \"PCA\" });\n        this.processData(r.data, false);\n      });\n  };\n\n  runKmeans = () => {\n    console.log(num_clusters);\n    const formData = {\n      df: this.state.data,\n      num_clusters: num_clusters,\n    };\n    this.setState({ isLoading: true });\n    axios\n      .post(\"http://10.4.4.115:5000/runkmeans\", formData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((r) => {\n        var cluster_names = {}; \n        [...Array(num_clusters)].map((x, index) => {\n          cluster_names[index] = index;\n        });\n        // console.log(r);\n        this.setState({\n          isLoading: false,\n          selectedUploadOption: \"PCA\",\n          clusterColors: r.data,\n          cluster_names: cluster_names,\n        });\n      })\n  };\n  detectOutliers = () => {\n    if (selectedOutlierMethod === \"None\") {\n      this.setOutlierData([]);\n    } else {\n      const formData = {\n        df: this.state.data,\n        method: selectedOutlierMethod,\n        columnRange : this.state.columnRange,\n      };\n      this.setState({ isLoading: true });\n      axios\n        .post(\"http://10.4.4.115:5000/detectoutliers\", formData, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        })\n        .then((r) => {\n          // console.log(r);\n          this.setState({\n            isLoading: false,\n          });\n          this.processData(r.data, true);\n        });\n    }\n  };\n\n  handleSpecificColumns = (event) => {\n    this.setState({\n      distributionData:\n        event.label === \"None\"\n          ? []\n          : this.state.data.map(elem => elem[event.label])\n    });\n  };\n\n  handleDRAChange = (value) => {\n    this.setState({ DRAlgorithm: value.label });\n  };\n\n  showScatterPlot = () => {\n    const x = this.state.selectedColumns[0];\n    const y = this.state.selectedColumns[1];\n    const z = this.state.selectedColumns[2];\n    const distributionData = this.state.distributionData;\n    const ONE_DIM = 0; \n    const TWO_DIM = 1; \n    const THREE_DIM = 2; \n    if (\n      this.state.selectedColumns[0] === null &&\n      this.state.selectedColumns[1] === null &&\n      this.state.selectedColumns[2] === null\n    ) {\n      return <ScatterPlot data={[]} />;\n    } else if (\n      this.state.selectedColumns[1] === null &&\n      this.state.selectedColumns[2] === null\n    ) {\n      if (\n        this.state.clusterColors.length > 0 ||\n        distributionData.length > 0 ||\n        this.state.OutlierData.length > 0\n      ) {\n        if (this.state.OutlierData.length > 0) {\n          var combine_outliers = this.state.OutlierData.map((elem) => {\n            return parseInt(elem[x], 10);\n          });\n\n          if (this.state.clusterColors.length > 0) {\n            return this.scatterWithClusters(ONE_DIM, x, null, null, true, combine_outliers);\n          }else if (distributionData.length > 0){\n            return this.scatterCategoricalandOutliers(\n              ONE_DIM,\n              x,\n              null,\n              null,\n              distributionData,\n              combine_outliers,\n              false\n            );\n          }\n          else{\n            return this.scatterCategoricalandOutliers(\n              ONE_DIM,\n              x, null, null, this.state.OutlierData.map((elem) => {\n                return parseInt(elem[x], 10);\n              }),\n              this.state.OutlierData.map((elem) => {\n                return parseInt(elem[x], 10);\n              }), true\n            );\n          }\n        } else if (distributionData.length > 0) {\n          return this.scatterCategorical(ONE_DIM, x, null, null, distributionData, false);\n        } else {\n          return this.scatterWithClusters(ONE_DIM, x,null, null, false);\n        }\n      } else {\n        return this.scatter1d(x);\n      }\n    } else if (this.state.selectedColumns[2] === null) {\n      if (\n        this.state.clusterColors.length > 0 ||\n        distributionData.length > 0 ||\n        this.state.OutlierData.length > 0\n      ) {\n        if (this.state.OutlierData.length > 0) {\n          var combine_outliers = this.state.OutlierData.map((elem) => {\n            var val1 = parseInt(elem[x], 10) === 1;\n            var val2 = parseInt(elem[y], 10) === 1;\n            if (this.state.pressed === 1) {\n              return val1 || val2 ? 1 : 0;\n            } else {\n              return val1 && val2 ? 1 : 0;\n            }\n          });\n          if (this.state.clusterColors.length > 0) {\n            return this.scatterWithClusters(TWO_DIM, x, y, null, true, combine_outliers);\n          }else if (distributionData.length > 0){\n            return this.scatterCategoricalandOutliers(\n              TWO_DIM,\n              x,\n              y,\n              null,\n              distributionData,\n              combine_outliers,\n              false\n            );\n          }\n          else{\n            return this.scatterCategoricalandOutliers(\n            TWO_DIM,\n            x,\n            y,\n            null,\n            this.state.OutlierData.map((elem) => {\n              var val1 = parseInt(elem[x], 10) === 1;\n              var val2 = parseInt(elem[y], 10) === 1;\n              if (this.state.pressed === 1) {\n                return val1 || val2 ? 1 : 0;\n              } else {\n                return val1 && val2 ? 1 : 0;\n              }\n            }),this.state.OutlierData.map((elem) => {\n              var val1 = parseInt(elem[x], 10) === 1;\n              var val2 = parseInt(elem[y], 10) === 1;\n              if (this.state.pressed === 1) {\n                return val1 || val2 ? 1 : 0;\n              } else {\n                return val1 && val2 ? 1 : 0;\n              }\n            }),\n            true\n            );\n          }\n        } else if (distributionData.length > 0) {\n          return this.scatterCategorical(TWO_DIM, x, y, z, distributionData);\n        } else {\n          return this.scatterWithClusters(TWO_DIM, x, y, null, false, null, null);\n        }\n      } else {\n        return this.scatter2d(x, y);\n      }\n    } else {\n      if (\n        this.state.clusterColors.length > 0 ||\n        distributionData.length > 0 ||\n        this.state.OutlierData.length > 0\n      ) {\n        if (this.state.OutlierData.length > 0) {\n          var combine_outliers = this.state.OutlierData.map((elem) => {\n            var val1 = parseInt(elem[x], 10) === 1;\n            var val2 = parseInt(elem[y], 10) === 1;\n            var val3 = parseInt(elem[z], 10) === 1;\n            if (this.state.pressed === 1) {\n              return val1 || val2 || val3 ? 1 : 0;\n            } else {\n              return val1 && val2 && val3 ? 1 : 0;\n            }\n          });\n          if (this.state.clusterColors.length > 0){\n            return this.scatterWithClusters(THREE_DIM, x, y, z, true, combine_outliers);\n          }else if (distributionData.length > 0){\n            return this.scatterCategoricalandOutliers(\n              THREE_DIM,\n              x,\n              y,\n              z,\n              distributionData,\n              combine_outliers,\n              false\n            );\n          }\n          else{\n            return this.scatterCategoricalandOutliers(\n              THREE_DIM,\n              x,\n              y,\n              z,\n              combine_outliers,\n              combine_outliers,\n              true\n            );\n          }\n        } else if (distributionData.length > 0) {\n          return this.scatterCategorical(THREE_DIM, x, y, z, distributionData);\n        } else {\n          return this.scatterWithClusters(THREE_DIM, x, y, z, false, null, null);\n        }\n      } else {\n        return this.scatter3d(x, y, z);\n      }\n    }\n  };\n  IncrementHandler = (data) => {\n    console.log(data);\n    num_clusters = data.num_clusters;\n  };\n  handleOutlierColumnChange = (data) => {\n    console.log(data);\n    this.setState({columnRange: data.columnRange});\n  }\n\n  handleTabOutputCallback = (cluster_names) => {\n    console.log(cluster_names);\n    this.setState({cluster_names: cluster_names});\n  }\n  \n  onPressReset = () => {\n    this.setState({\n      OutlierData: [],\n      cluster_names: {},\n      clusterColors: [],\n      distributionData: [],\n    })\n  }\n  \n  render() {\n    \n    return (\n      <div style={styles.splitScreen}>\n        <div style={styles.leftPane}>\n          {this.correlationMatrixUpload()}\n          <form style={{ marginTop: \"30px\" }}>\n            <div className=\"radio\">\n              <label>\n                <input\n                  type=\"radio\"\n                  value=\"Correlation Matrix\"\n                  checked={\n                    this.state.selectedUploadOption === \"Correlation Matrix\"\n                  }\n                  onChange={this.onUploadValueChange}\n                />\n                Correlation Matrix\n              </label>\n            </div>\n            <div className=\"radio\">\n              <label>\n                <input\n                  type=\"radio\"\n                  value=\"PCA\"\n                  checked={this.state.selectedUploadOption === \"PCA\"}\n                  onChange={this.onUploadValueChange}\n                />\n                PCA\n              </label>\n            </div>\n            <div>\n              <label>\n                <input\n                  type=\"radio\"\n                  value=\"t-SNE\"\n                  checked={this.state.selectedUploadOption === \"t-SNE\"}\n                  onChange={this.onUploadValueChange}\n                />\n                t-SNE\n              </label>\n\n              {this.state.selectedUploadOption === \"Correlation Matrix\" && (\n                <div\n                  style={{\n                    width: \"300px\",\n                    paddingTop: \"20px\",\n                    paddingBottom: \"20px\",\n                  }}\n                >\n                  <label>Dimensionality Reduction Algorithms</label>\n                  <Select\n                    name=\"DRA\"\n                    placeholder=\"Algorithm\"\n                    options={this.state.DRActions}\n                    onChange={this.handleDRAChange}\n                  />\n                </div>\n              )}\n            </div>\n            <input\n              type=\"file\"\n              accept=\".csv,.xlsx,.xls\"\n              disabled={this.state.selectedUploadOption === null}\n              onChange={this.handleFileUpload}\n            />\n          </form>\n          <hr\n            style={{\n              color: \"black\",\n              backgroundColor: \"black\",\n              width: \"40%\",\n              height: 3,\n              opacity: 1,\n            }}\n          />\n          <div\n            style={{\n              width: \"270px\",\n              paddingVertical: \"20px\",\n            }}\n          >\n            <label> <h5> Describing Columns </h5></label>\n            <Select\n              name=\"filters\"\n              placeholder=\"Filters\"\n              value={this.state.multiValue.filter((elem) => {\n                return elem.label !== \"None\";\n              })}\n              options={this.state.selectActions}\n              onChange={this.handleMultiChange}\n              isMulti\n            />\n          </div>\n          <hr\n            style={{\n              color: \"black\",\n              backgroundColor: \"black\",\n              width: \"40%\",\n              height: 3,\n              opacity: 1,\n            }}\n          />\n          <Incrementor onChange={this.IncrementHandler} />\n          <Button variant=\"outlined\"   onClick={this.runKmeans}>Run Kmeans</Button>\n          <div style= {{marginTop: \"20%\"}}>\n          <Button variant=\"outlined\" style={{color:\"red\", fontWeight:'bold', fontStyle:'italic'}}\n          onClick={this.onPressReset}>\n            RESET\n          </Button>\n          </div>\n          \n        </div>\n\n        <div\n          className=\"block-example border border-light\"\n          style={styles.rightPane}\n        >\n          {this.state.isLoading && (\n            <Loader type=\"TailSpin\" color=\"#00BFFF\" height=\"100\" width=\"100\" />\n          )}\n          {!this.state.isLoading && (\n            <div>\n              {this.showScatterPlot()}\n              <Tabs style={styles.optionsContainer}>\n                  <TabList>\n                    <Tab>Settings</Tab>\n                    <Tab>Output Options</Tab>\n                  </TabList>\n\n                  <TabPanel>\n                    <div className=\"radio\" style={styles.dimensions}>\n                      <h6>Plot: </h6>\n                      <label style={{marginLeft : \"10%\"}}>\n                        <input\n                        type=\"radio\"\n                        value=\"1D\"\n                        checked={this.state.selectedOption === \"1D\"}\n                        onChange={this.onValueChange1D}                        \n                      />\n                      1D\n                    </label>\n                    <label style={{marginLeft : \"10%\"}}>\n                      <input\n                        type=\"radio\"\n                        value=\"2D\"\n                        checked={this.state.selectedOption === \"2D\"}\n                        onChange={this.onValueChange2D}\n                      />\n                      2D\n                    </label>\n                    <label style={{marginLeft : \"10%\"}}>\n                        <input\n                          type=\"radio\"\n                          value=\"3D\"\n                          checked={this.state.selectedOption === \"3D\"}\n                          onChange={this.onValueChange3D}\n                        />\n                        3D\n                      </label>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"row-md-8\"></div>\n\n                    <div style={styles.dropDown}>\n                      <label style= {{width : '15%', marginLeft: \"3%\"}} > \n                      <h6> X-axis </h6></label>\n                      <div style= {{width : '50%'}} >\n                      <Select\n                        options={this.state.selectActions}\n                        onChange={this.handleSelectXChange}\n                      />\n                      </div>\n                    </div>\n                    {(this.state.selectedOption === \"2D\" ||\n                      this.state.selectedOption === \"3D\") && (\n                      <div style={styles.dropDown}>\n                        <label style= {{width : '15%', marginLeft: \"3%\"}} >\n                        <h6> Y-axis </h6>\n                        </label>\n                      <div style= {{width : '50%'}} >\n                        <Select\n                          options={this.state.selectActions}\n                          onChange={this.handleSelectYChange}\n                        />\n                      </div>\n                      </div>\n                    )}\n                    {this.state.selectedOption === \"3D\" && (\n                      <div style={styles.dropDown}>\n                        <label style= {{width : '15%', marginLeft: \"3%\"}} > \n                        <h6> Z-axis </h6>\n                        </label>\n                      <div style= {{width : '50%'}} >\n                        <Select\n                          options={this.state.selectActions}\n                          onChange={this.handleSelectZChange}\n                        />\n                      </div>\n                      </div>\n                    )}\n                    {this.state.multiValue.length > 0 && (\n                      <div style={styles.dropDown}>\n                        <label style= {{width : '55%', marginLeft: \"3%\"}} > \n                          <h6>Choose Describing Column</h6>\n                        </label>\n                        <div style= {{width : '40%'}} >\n                          <Select\n                            options={this.state.multiValue}\n                            onChange={this.handleSpecificColumns}\n                          />\n                        </div>\n                      </div>\n                    )}\n                  </div>\n\n            <div\n              style={{\n                width: \"90%\",\n                marginTop: \"3%\",\n                marginLeft: \"3%\"\n              }}\n            >\n              <h6>Choose the outlier detection method</h6>\n              <Select\n                options={this.state.selectOutlierActions}\n                onChange={this.handleOutlierChange}\n              />\n              \n              <OutlierBlock onChange={this.handleOutlierColumnChange}/>\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"space-around\",\n                  padding: '20px'\n                }}\n              >\n                <Button variant=\"outlined\"  \n                  onClick={() => this.state.pressed === 0 ? this.setState({ pressed: -1 }) : this.setState({ pressed: 0})}\n                  style={{\n                    marginTop: \"20px\",\n                    backgroundColor:\n                      this.state.pressed === 0 ? \"green\" : \"transparent\",\n                  }}\n                >\n                  AND\n                </Button>\n                <Button variant=\"outlined\"  \n                  onClick={() => this.state.pressed === 1 ? this.setState({ pressed: -1 }) : this.setState({ pressed: 1})}\n                  style={{\n                    marginTop: \"20px\",\n                    backgroundColor:\n                      this.state.pressed === 1 ? \"green\" : \"transparent\",\n                  }}\n                >\n                  OR\n                </Button>\n              </div>\n              <Button \n                variant=\"outlined\" \n                onClick={this.detectOutliers} \n                style={{ marginLeft: \"30%\",  }} \n                disabled = {\n                  (\n                    this.state.pressed !== 0 && \n                    this.state.pressed !== 1\n                  ) \n                  || selectedOutlierMethod == null \n                  }\n              >\n                Detect Outliers\n              </Button>\n            </div>\n\n                {this.state.data !== null && (\n                  <DownloadData\n                    data={this.state.data}\n                    clusterColors={this.state.clusterColors}\n                    OutlierData={this.state.OutlierData}\n                    columnRange={this.state.columnRange}\n                    clusterNames={this.state.cluster_names}\n                  />\n                )}\n                  </TabPanel>\n                  <TabPanel style={styles.outputSettings}>\n                    <TabOutputOptions uniqueClusters = {num_clusters} parentCallback = {this.handleTabOutputCallback} />\n                  </TabPanel>\n                </Tabs>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  splitScreen: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  leftPane: {\n    height: \"100%\",\n    position: \"fixed\",\n    z_index: 1,\n    top: 0,\n    overflow_x: \"hidden\",\n    padding_top: \"20px\",\n    left: 0,\n    width: \"40%\",\n    marginTop: \"5%\",\n    marginLeft: \"3%\",\n  },\n  rightPane: {\n    height: \"85%\",\n    position: \"fixed\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    top: 0,\n    right: 0,\n    width: \"75%\",\n    marginTop: \"5%\",\n    marginRight: \"10px\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 10,\n  },\n  radioButtons: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginTop: \"10px\",\n  },\n  dimensions: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"baseline\",\n    marginLeft: '3%',\n    width: \"90%\",\n  },\n  outputSettings:{\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-around\",\n  },\n\n  dropDown: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    padding: \"10px\",\n    justifyContent: 'baseline'\n  },\n  optionsContainer: {\n    position: \"fixed\",\n    right: \"3%\",\n    top: 0, \n    height: \"75%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"18%\",\n    padding: \"10px\",\n    marginTop: \"7%\",\n    backgroundColor: \"#ebeff7\",\n    borderRadius: 10\n  },\n};\nexport default App;\n","import \"./App.css\";\nimport UploadFile from \"./Components/UploadFile\";\nimport Navbar from 'react-bootstrap/Navbar'\nfunction App() {\n  return (\n    <div>\n      <Navbar style={{paddingLeft: \"30px\"}} bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand>Data Visualization Tool</Navbar.Brand>\n      </Navbar>\n  \n      <UploadFile />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}